<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat May 27 09:46:47 UTC 2023

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[CXF-2384] SOAPFaultExcption thrown instead of a WebServiceException</title>
                <link>https://issues.apache.org/jira/browse/CXF-2384</link>
                <project id="12310511" key="CXF">CXF</project>
                    <description>&lt;p&gt;When the connection of the webservice is lost we get a SoapFaultException instead of of a WebServiceException. We use the dispachter in the following way:&lt;/p&gt;


&lt;p&gt;	Service service = Service.create(SERVICE_NAME);&lt;br/&gt;
	service.addPort(PORT_NAME, SOAPBinding.SOAP11HTTP_BINDING, url.toString());&lt;br/&gt;
	Dispatch&amp;lt;SOAPMessage&amp;gt; dispatch = service.createDispatch(PORT_NAME, SOAPMessage.class, Service.Mode.MESSAGE);&lt;br/&gt;
	SOAPMessage response = dispatch.invoke(request);&lt;/p&gt;

&lt;p&gt;Looking in the API  (&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/javax/xml/ws/Dispatch.html#invoke(T&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://java.sun.com/javase/6/docs/api/javax/xml/ws/Dispatch.html#invoke(T&lt;/a&gt;)), there is specified that any communication problem will cause in a WebServiceException. To our point of view this is a bug in cxf.&lt;/p&gt;</description>
                <environment>&lt;p&gt;jdk1.6, ubuntu 9.10&lt;/p&gt;</environment>
        <key id="12432663">CXF-2384</key>
            <summary>SOAPFaultExcption thrown instead of a WebServiceException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="niekos">Niek Palm</reporter>
                        <labels>
                    </labels>
                <created>Mon, 10 Aug 2009 08:49:52 +0000</created>
                <updated>Mon, 11 Oct 2010 14:52:30 +0000</updated>
                            <resolved>Tue, 5 Oct 2010 17:21:27 +0000</resolved>
                                    <version>2.2.2</version>
                                    <fixVersion>2.2.7</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                                                                <comments>
                            <comment id="12754993" author="a3.aan" created="Mon, 14 Sep 2009 14:13:12 +0000"  >&lt;p&gt;We are still facing this problem. Will there be any response?&lt;/p&gt;</comment>
                            <comment id="12834750" author="niekos" created="Wed, 17 Feb 2010 12:23:10 +0000"  >&lt;p&gt;We have upgraded to cxf 2.2.6 but still get a SOAPFaultExcpetion instead of a WebServiceException when the service is not running. &lt;/p&gt;


</comment>
                            <comment id="12834922" author="dkulp" created="Wed, 17 Feb 2010 18:36:53 +0000"  >&lt;p&gt;&lt;br/&gt;
OK.   Better testcase written and bug fixed.&lt;/p&gt;</comment>
                            <comment id="12897236" author="niekos" created="Wed, 11 Aug 2010 12:40:47 +0000"  >&lt;p&gt;I test the solution against 2.2.7 and 2.2.9, it seems still not fixed.&lt;/p&gt;

&lt;p&gt;I test the the solution by calling a not running service. We still get a SOAPFaultException which means that there is a SOAPFault. Since the service cannot be called there is no SOAPFault. The correct solution should be throw an exception that is a instance of WebServiceException based on a ConnectionException in stead of throwing an SOAPFaultException based on a ConnectionException.&lt;/p&gt;


&lt;p&gt;So here a CXF code snippet.&lt;/p&gt;

&lt;p&gt;class: org.apache.cxf.jaxws.DispatchImpl&lt;/p&gt;

&lt;p&gt;...&lt;br/&gt;
    private RuntimeException mapException(Exception ex) {&lt;br/&gt;
        if (ex instanceof Fault &amp;amp;&amp;amp; ex.getCause() instanceof IOException) &lt;/p&gt;
{
            throw new WebServiceException(ex.getMessage(), ex.getCause());
        }&lt;br/&gt;
&lt;br/&gt;
should be changed to some like:&lt;br/&gt;
...&lt;br/&gt;
    private RuntimeException mapException(Exception ex) {&lt;br/&gt;
        if (ex instanceof Fault &amp;amp;&amp;amp; (ex.getCause() instanceof IOException || ex.getCause() instanceof ConnectionException)) {            throw new WebServiceException(ex.getMessage(), ex.getCause());        }

&lt;p&gt;Maybe there is no need (anymore to check against an IOExcption&lt;/p&gt;</comment>
                            <comment id="12897362" author="dkulp" created="Wed, 11 Aug 2010 18:13:57 +0000"  >

&lt;p&gt;You&apos;ll probably need to provide a full test case.  If you see the test that was added for this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/viewvc/cxf/trunk/systests/jaxws/src/test/java/org/apache/cxf/systest/dispatch/DispatchClientServerTest.java?view=markup&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://svn.apache.org/viewvc/cxf/trunk/systests/jaxws/src/test/java/org/apache/cxf/systest/dispatch/DispatchClientServerTest.java?view=markup&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(line 128) you can see it specifically asserts that it&apos;s not a SOAPFaultException.&lt;/p&gt;
</comment>
                            <comment id="12897595" author="niekos" created="Thu, 12 Aug 2010 07:01:15 +0000"  >&lt;p&gt;The problem is that the test does not test the scenario when no server is running. You are testing against a webservice against a running service and an invallid port.&lt;/p&gt;

&lt;p&gt;Using the same test without running the service should will result in the point mentioned above. &lt;/p&gt;

&lt;p&gt;Since I am not succeed to run the cxf test cases using maven it is not so easy to provide the testcase.&lt;/p&gt;</comment>
                            <comment id="12897813" author="dkulp" created="Thu, 12 Aug 2010 16:12:06 +0000"  >
&lt;p&gt;If I comment out the line that starts the server, the test also passes.  &lt;/p&gt;

&lt;p&gt;I&apos;ve also added a test in the same class that tests the case where it&apos;s using a correct port, but a path to where a service isn&apos;t running. (aka: gets a 404 return code back)    That is also passing with a WebServiceException wrappering an IOException.&lt;/p&gt;

&lt;p&gt;Thus, everything looks like it&apos;s  working correctly from my point of view.   To do much of anything else, we&apos;ll really need a  complete test case.&lt;/p&gt;</comment>
                            <comment id="12905486" author="janstey" created="Thu, 2 Sep 2010 12:23:20 +0000"  >&lt;p&gt;Hi Dan,&lt;/p&gt;

&lt;p&gt;I don&apos;t want to make this any more confusing but there seems to be a mismatch between the spec and the javadoc... the spec says the following about a failed dispatch:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;4.3.1 Configuration&lt;br/&gt;
...&lt;br/&gt;
Conformance (Failed Dispatch.invoke): When an operation is invoked using an invoke method, an&lt;br/&gt;
implementation MUST throw a WebServiceException if there is any error in the configuration of the&lt;br/&gt;
Dispatch instance or a ProtocolException if an error occurs during the remote operation invocation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;whereas the javadoc, as was pointed out in an earlier comment, says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Throws:&lt;br/&gt;
WebServiceException - If a fault occurs during communication with the service&lt;br/&gt;
WebServiceException - If there is any error in the configuration of the Dispatch instance&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Technically, a ProtocolException IS a WebServiceException but you would have thought that the javadoc would have said that&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Throws:&lt;br/&gt;
ProtocolException - If a fault occurs during communication with the service&lt;br/&gt;
WebServiceException - If there is any error in the configuration of the Dispatch instance&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wondering if this is a &quot;bug&quot; in the javadoc or if they just loosened the requirement a bit.&lt;/p&gt;

&lt;p&gt;Any thoughts?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Jon&lt;/p&gt;</comment>
                            <comment id="12905534" author="dkulp" created="Thu, 2 Sep 2010 15:11:33 +0000"  >&lt;p&gt;&lt;br/&gt;
&lt;br/&gt;
My gut feeling says it&apos;s a bug in the javadoc.  Normally, you wouldn&apos;t list the same exception twice in the javadoc throws.&lt;/p&gt;</comment>
                            <comment id="12918080" author="dkulp" created="Tue, 5 Oct 2010 17:21:27 +0000"  >
&lt;p&gt;Re-marking this as resolved as the tests pass.&lt;/p&gt;

&lt;p&gt;HOWEVER, this may also be a &quot;won&apos;t fix&quot; as I think I know the issue.  CXF delays connecting until a buffer (defaults to 4K fills) or the message finishes writing so that we can flip to non-chunked mode for small messages.   If the connection is made during the writing of larger requests, we may get the exceptions wrapped in a variety of different exceptions (like JAXB exceptions or Stax exceptions and such) and thus may be difficult or impossible to detect.  The workaround is to configure in a larger buffer size.   See ChunkingThreshold info at:&lt;br/&gt;
&lt;a href=&quot;https://cwiki.apache.org/confluence/display/CXF20DOC/Client+HTTP+Transport+(including+SSL+support&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://cwiki.apache.org/confluence/display/CXF20DOC/Client+HTTP+Transport+(including+SSL+support&lt;/a&gt;)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>113809</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            12 years, 35 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0a62v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>57258</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>