<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat May 27 09:47:25 UTC 2023

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[CXF-5663] IllegalStateException using AsyncHTTPConduit</title>
                <link>https://issues.apache.org/jira/browse/CXF-5663</link>
                <project id="12310511" key="CXF">CXF</project>
                    <description>&lt;p&gt;We are using CXF with Async HTTP Transport to call web services of another system. Every once in a while an attempt to send request ends in IllegalStateException - Buffer already closed for writing (logs provided below).&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2014.04.01 10:47:22.601 org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory$3 DEBUG [HLAPI-47] DefaultAsyncRequestDirector:208 [exchange: 5663] start execution
2014.04.01 10:47:22.601 org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory$3 DEBUG [HLAPI-47] DefaultAsyncRequestDirector:625 [exchange: 5663] Request connection for {}-&amp;gt;http://10.250.32.140:8082
2014.04.01 10:47:22.602 org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory$2 DEBUG [HLAPI-47] PoolingClientAsyncConnectionManager:172 Connection request: [route: {}-&amp;gt;http://10.250.32.140:8082][total kept alive: 2; route allocated: 2 of 1000; total allocated: 2 of 5000]
2014.04.01 10:47:22.603 org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory$2 DEBUG [HLAPI-47] PoolingClientAsyncConnectionManager$InternalPoolEntryCallback:297 Connection leased: [id: 1746][route: {}-&amp;gt;http://10.250.32.140:8082][total kept alive: 1; route allocated: 2 of 1000; total allocated: 2 of 5000]
2014.04.01 10:47:22.604 org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory$3 DEBUG [HLAPI-47] DefaultAsyncRequestDirector:558 [exchange: 5663] Connection allocated: [id:1746][route:{}-&amp;gt;http://10.250.32.140:8082][state:null]
2014.04.01 10:47:22.625 org.apache.http.impl.nio.reactor.IOSessionImpl DEBUG [I/O dispatcher 18] LoggingIOSession$LoggingByteChannel:189 http-outgoing-1746 10.252.152.177:65127&amp;lt;-&amp;gt;10.250.32.140:8082[ACTIVE][r:r]: -1 bytes read
2014.04.01 10:47:22.625 org.apache.http.impl.nio.reactor.IOSessionImpl DEBUG [HLAPI-47] LoggingIOSession:167 http-outgoing-1746 10.252.152.177:65127&amp;lt;-&amp;gt;10.250.32.140:8082[ACTIVE][r:r]: Set attribute http.nio.exchange-handler
2014.04.01 10:47:22.626 org.apache.http.impl.nio.reactor.IOSessionImpl DEBUG [I/O dispatcher 18] LoggingIOSession:118 http-outgoing-1746 10.252.152.177:65127&amp;lt;-&amp;gt;10.250.32.140:8082[ACTIVE][r:r]: Close
2014.04.01 10:47:22.626 org.apache.http.impl.nio.reactor.IOSessionImpl DEBUG [HLAPI-47] LoggingIOSession:105 http-outgoing-1746 10.252.152.177:65127&amp;lt;-&amp;gt;10.250.32.140:8082[CLOSED][]: Event set [w]
2014.04.01 10:47:22.628 org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory$3 DEBUG [HLAPI-47] DefaultAsyncRequestDirector:185 [exchange: 5663] aborting connection [id:1746][route:{}-&amp;gt;http://10.250.32.140:8082][state:null]
2014.04.01 10:47:22.629 org.apache.http.impl.nio.reactor.IOSessionImpl DEBUG [HLAPI-47] LoggingIOSession:133 http-outgoing-1746 [CLOSED][]: Shutdown
2014.04.01 10:47:22.629 org.apache.http.impl.nio.reactor.IOSessionImpl DEBUG [HLAPI-47] LoggingIOSession:133 http-outgoing-1746 [CLOSED][]: Shutdown
2014.04.01 10:47:22.630 org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory$2 DEBUG [HLAPI-47] PoolingClientAsyncConnectionManager:236 Connection released: [id: 1746][route: {}-&amp;gt;http://10.250.32.140:8082][total kept alive: 1; route allocated: 1 of 1000; total allocated: 1 of 5000]
2014.04.01 10:47:22.642 org.apache.cxf.phase.PhaseInterceptorChain WARN  [HLAPI-47] LogUtils:452 Interceptor for {http://implementation.web.api.icc.services.osp.in.alcatel.com}SubscriberLineManagerPortTypeService#{http://implementation.web.api.icc.services.osp.in.alcatel.com}getAll has thrown exception, unwinding now
java.lang.IllegalStateException: IllegalStateException invoking http://10.250.32.140:8082/HighLevelApiWS-2.4/services/SubscriberLineManager: Buffer already closed for writing
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.mapException(HTTPConduit.java:1339)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1328)
        at org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduit$AsyncWrappedOutputStream.close(AsyncHTTPConduit.java:381)
        at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:50)
        at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:223)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:628)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)
        at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:565)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:474)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:377)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:330)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:96)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:135)
        at $Proxy89.getAll(Unknown Source)
        at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at pl.infovide.inconfig.bep.backend.hlapi.HlapiCommunicator.send(HlapiCommunicator.java:236)
        at pl.infovide.inconfig.bep.backend.hlapi.HlapiBackend.send(HlapiBackend.java:26)
        at pl.infovide.inconfig.bep.backend.unified.UnifiedBackendImpl.forwardRequest(UnifiedBackendImpl.java:194)
        at pl.infovide.inconfig.bep.backend.unified.UnifiedBackendImpl.access$000(UnifiedBackendImpl.java:29)
        at pl.infovide.inconfig.bep.backend.unified.UnifiedBackendImpl$SenderTask.run(UnifiedBackendImpl.java:276)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalStateException: Buffer already closed for writing
        at org.apache.cxf.transport.http.asyncclient.SharedOutputBuffer.write(SharedOutputBuffer.java:231)
        at org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduit$AsyncWrappedOutputStream$1.write(AsyncHTTPConduit.java:397)
        at org.apache.cxf.io.AbstractWrappedOutputStream.write(AbstractWrappedOutputStream.java:51)
        at org.apache.cxf.io.AbstractThresholdOutputStream.write(AbstractThresholdOutputStream.java:69)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1296)
        ... 25 common frames omitted
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We are unable to provide a test-case since the problem is indeterministic. Roughly 10-20 out of ~14000 requests a day end this way.&lt;/p&gt;

&lt;p&gt;We will probably apply a workaround by catching the exception and retrying the request, however CXF&apos;s behavior in this case doesn&apos;t seem to be valid.&lt;/p&gt;</description>
                <environment>&lt;p&gt;SunOS 5.10 Generic_147440-25 sun4v sparc SUNW,SPARC-Enterprise-T5120, 64bit&lt;/p&gt;</environment>
        <key id="12705990">CXF-5663</key>
            <summary>IllegalStateException using AsyncHTTPConduit</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ffang">Freeman Yue Fang</assignee>
                                    <reporter username="poltarzewski">Przemys&#322;aw O&#322;tarzewski</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Apr 2014 16:01:07 +0000</created>
                <updated>Fri, 31 Mar 2017 19:38:49 +0000</updated>
                            <resolved>Thu, 23 Mar 2017 17:09:19 +0000</resolved>
                                    <version>2.7.10</version>
                                    <fixVersion>3.1.10</fixVersion>
                                    <component>Transports</component>
                        <due></due>
                            <votes>6</votes>
                                    <watches>12</watches>
                                                                                                                <comments>
                            <comment id="14004561" author="rnaude" created="Wed, 21 May 2014 10:39:36 +0000"  >&lt;p&gt;We are seeing the exact same issue using CXF 2.7.7.&lt;/p&gt;

&lt;p&gt;Looks like the remote server is closing the connection immediately after establishing a connection, or very shortly thereafter.&lt;/p&gt;

&lt;p&gt;Can it be that the remote server&apos;s keep-alive timeout has expired?&lt;/p&gt;</comment>
                            <comment id="14019840" author="bubulemaster" created="Fri, 6 Jun 2014 13:27:55 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;we have same issue.&lt;/p&gt;

&lt;p&gt;We use it cause we have many connection to server with different NTLM credential.&lt;/p&gt;

&lt;p&gt;We have take this solution after read this blog : &lt;a href=&quot;http://monkeyingwithjava.wordpress.com/2012/09/27/connecting-to-microsoft-dynamics-crm-4-0-webservices-with-java-lessons-learned/&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://monkeyingwithjava.wordpress.com/2012/09/27/connecting-to-microsoft-dynamics-crm-4-0-webservices-with-java-lessons-learned/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CXF 3.0 is different and maybe fix this issue ?&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;</comment>
                            <comment id="14026436" author="sylvain_maillard" created="Tue, 10 Jun 2014 13:38:04 +0000"  >&lt;p&gt;Hi Emeric, CXF 3.0 will not solve your issue because of : &lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-5671&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/CXF-5671&lt;/a&gt; XD&lt;/p&gt;</comment>
                            <comment id="14049684" author="bubulemaster" created="Wed, 2 Jul 2014 07:09:08 +0000"  >&lt;p&gt;After many investigations, I don&apos;t think that is CXF issue.&lt;br/&gt;
Problem is when HttCore Nio try to get last TCP packet. Chanel ask is ready to read but when read, system hang up (1 or 2 minutes).&lt;br/&gt;
2 posibility : IIS close chanel or IIS take many time to send content.&lt;/p&gt;

&lt;p&gt;If I add break point, cause, system read more slowly, I don&apos;t have issue.&lt;/p&gt;

&lt;p&gt;It&apos;s probably behaviours of IIS server in asynchrone mode through SSL connection.&lt;/p&gt;

&lt;p&gt;Somebody have same issue with IIS without SSL connection ?&lt;/p&gt;</comment>
                            <comment id="14054007" author="rajivgandhi" created="Mon, 7 Jul 2014 18:47:03 +0000"  >&lt;p&gt;+1 - We have the exact same issue in production right now - using cxf 2.7.11, async rest client (webclient) api.&lt;/p&gt;</comment>
                            <comment id="14122829" author="paranoiduser" created="Fri, 5 Sep 2014 11:45:43 +0000"  >&lt;p&gt;Hi guys,&lt;/p&gt;

&lt;p&gt;I have the same error when I try to send HTTP request with custom method (not supported in HttpUrlConnection) and body size exceeds ~ 1 megabyte.&lt;br/&gt;
When the message body has a small size (1Kb) problem does not appear.&lt;br/&gt;
Disabling the chunked transfer does not help.&lt;/p&gt;

&lt;p&gt;I use CXF 3.0.0, HttpClient 4.3.2 and HttpAsyncClient 4.0.1.&lt;br/&gt;
Can anybody help me to solve this problem?&lt;/p&gt;

&lt;p&gt;Many thanks.&lt;/p&gt;</comment>
                            <comment id="14212061" author="bubulemaster" created="Fri, 14 Nov 2014 09:43:02 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;to solve this issue, we have drop CXF to use JAXB and HttpAsyncClient.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;</comment>
                            <comment id="14943193" author="andrewjamesramirez" created="Mon, 5 Oct 2015 10:27:00 +0000"  >&lt;p&gt;+ 1 Any updates? I am also having this current error &lt;/p&gt;

&lt;p&gt;I am using cxf 2.7.13 with cxf-rt-transports-http-hc&lt;/p&gt;

&lt;p&gt;The solution of  &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=bubulemaster&quot; class=&quot;user-hover&quot; rel=&quot;bubulemaster&quot;&gt;bubulemaster&lt;/a&gt; to drop cxf , is this the last solution?&lt;/p&gt;

&lt;p&gt;We had this issue during a performance test. &lt;/p&gt;</comment>
                            <comment id="14949018" author="dkulp" created="Thu, 8 Oct 2015 17:28:35 +0000"  >&lt;p&gt;Try upgrading to 3.1.3 and see if the problem persists.   3.1.3 uses newer versions of the HttpAsyncClient libraries.&lt;/p&gt;</comment>
                            <comment id="15430904" author="huembert" created="Mon, 22 Aug 2016 14:48:36 +0000"  >&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;I am facing the same problem when using Apache CXF 3.1.7. I already changed the HttpCore (4.4.4 &amp;gt; 4.4.5) but the result is the same. The following demo code shows how I parametrized and that code is working in general beside that exception. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;SOAPMessage requestMessage = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
MessageFactory mf;
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
    mf = MessageFactory.newInstance(jaxWsProtocol);
    requestMessage = mf.createMessage(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(requestMsg.getBytes(&lt;span class=&quot;code-quote&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;)));
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (SOAPException e) { ...
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (UnsupportedEncodingException e) {  ...
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {...}

SOAPMessage responseMessage = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
DispatchImpl&amp;lt;SOAPMessage&amp;gt; dispatchCxf = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;

&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(requestMsg != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
    
    Service service = Service.create(serviceQName);
    service.addPort(portQName, bindingType, endpointUrl);
    
    Dispatch&amp;lt;SOAPMessage&amp;gt; dispatch = service.createDispatch(portQName, SOAPMessage.class, Service.Mode.MESSAGE);
    
    dispatchCxf = (DispatchImpl&amp;lt;SOAPMessage&amp;gt;)dispatch;
    Client client = dispatchCxf.getClient();
    
    HTTPConduit conduit = (HTTPConduit) client.getConduit();
    HTTPClientPolicy httpClientPolicy = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HTTPClientPolicy();
    httpClientPolicy.setAllowChunking(&lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.FALSE);
    httpClientPolicy.setAutoRedirect(&lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.TRUE);
    httpClientPolicy.setAsyncExecuteTimeout(30000L);
    httpClientPolicy.setReceiveTimeout(0);
    httpClientPolicy.setConnectionTimeout(0);
&lt;span class=&quot;code-comment&quot;&gt;//            httpClientPolicy.setAsyncExecuteTimeoutRejection(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;); // orignal: &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;
&lt;/span&gt;    conduit.setClient(httpClientPolicy);
    
    Bus bus = client.getBus();
    bus.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;use.async.http.conduit&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.TRUE);
    bus.setProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.cxf.transport.http.async.SO_LINGER&quot;&lt;/span&gt;, 60);
    
    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; rc = dispatch.getRequestContext();
    rc.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;use.async.http.conduit&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.TRUE);
    rc.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;thread.local.request.context&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.TRUE);
    
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(credentials != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        rc.put(Credentials.&lt;span class=&quot;code-keyword&quot;&gt;class.&lt;/span&gt;getName(), credentials);
    }
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(soapAction != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;){
        rc.put(BindingProvider.SOAPACTION_USE_PROPERTY, &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.TRUE);
        rc.put(BindingProvider.SOAPACTION_URI_PROPERTY, soapAction);
    }
    
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
        responseMessage = dispatchCxf.invoke(requestMessage);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (WebServiceException e) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(e.getCause().getClass().equals(IOException.class)) {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(e.getCause().getMessage().startsWith(&lt;span class=&quot;code-quote&quot;&gt;&quot;Authorization loop detected on Conduit&quot;&lt;/span&gt;)) {
                &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Authentication failed: Wrong credentials: &quot;&lt;/span&gt; + e.getCause().getMessage());
            }
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(e.getCause().getClass().equals(SocketTimeoutException.class)) {
            &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(e.getCause().getMessage()); 
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; { &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(e.getCause().getMessage());}
        &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; WsServiceException(e.getCause().getMessage());
    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            dispatchCxf.close();
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) { &lt;span class=&quot;code-comment&quot;&gt;/* ignore */&lt;/span&gt; }
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; I created a JUnit test which creates multiple objects with my implementation by using the Callable interface. The DTOs contain connection information, credentials,etc. So I have 3 different web services with different credentials but on the same host.  In this test I created 3000 request which will run in thread pool. Sometimes it happened but sometimes not. When use my implementation in Apache Tomcat the this exceptions occurs very quickly. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@Test
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testWithCallable()  {
    
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numberOfHandlers = 3;
    SoapRequestHandler handler1 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SoapRequestHandler(dto1);
    ...

    Set&amp;lt;Future&amp;lt;SOAPMessage&amp;gt;&amp;gt; set = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;Future&amp;lt;SOAPMessage&amp;gt;&amp;gt;();
    ExecutorService pool = Executors.newFixedThreadPool(50);
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numberOfCalls = 1000;
    
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; numberOfCalls; i++) {

        TestSoapServiceCallableRunner run1 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TestSoapServiceCallableRunner(handler1);
        set.add(pool.submit(run1));

        TestSoapServiceCallableRunner run2 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TestSoapServiceCallableRunner(handler2);
        set.add(pool.submit(run2));

        TestSoapServiceCallableRunner run3 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TestSoapServiceCallableRunner(handler3);
        set.add(pool.submit(run3));
    }
    
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Future&amp;lt;SOAPMessage&amp;gt; afuture : set) {
        OutputStream os;
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            os = verifySoapResult(afuture.get()); IOUtils.closeQuietly(os);
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {...
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (ExecutionException e) {... }
    }
    assertEquals(numberOfCalls * numberOfHandlers, set.size());
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Workarounds like retrying often run in the same exception again hence it makes no sense to use it. I try to dive deeper into the topic...&lt;br/&gt;
My system: Fedora 24; i5. Ubuntu 14.04/16.04; OpenJDk 1.8.0_101&lt;/p&gt;</comment>
                            <comment id="15696820" author="sergey_beryozkin" created="Fri, 25 Nov 2016 22:48:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ffang&quot; class=&quot;user-hover&quot; rel=&quot;ffang&quot;&gt;ffang&lt;/a&gt; Hi Freeman - may be you can have a look at this issue at some point of time ?&lt;/p&gt;</comment>
                            <comment id="15696838" author="ffang" created="Fri, 25 Nov 2016 23:03:07 +0000"  >&lt;p&gt;Hi Sergey,&lt;/p&gt;

&lt;p&gt;Sure, I will take a close look when I get chance.&lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Freeman&lt;/p&gt;</comment>
                            <comment id="15707315" author="ffang" created="Wed, 30 Nov 2016 02:46:42 +0000"  >&lt;p&gt;I strongly suspect this issue was fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-7109&quot; title=&quot;ClientCallback may be invoked twice when Async HTTP Transport is used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-7109&quot;&gt;&lt;del&gt;CXF-7109&lt;/del&gt;&lt;/a&gt; already&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=huembert&quot; class=&quot;user-hover&quot; rel=&quot;huembert&quot;&gt;huembert&lt;/a&gt;, Would you please try with  CXF 3.1.9-SNAPSHOT to see if you can still see this problem with your testcase?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="15938785" author="dkulp" created="Thu, 23 Mar 2017 17:09:19 +0000"  >&lt;p&gt;&lt;br/&gt;
Suspect that this is already fixed, request for confirmation unanswered. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>384313</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 10 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1u7j3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>384581</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>