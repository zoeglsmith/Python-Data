<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat May 27 09:46:28 UTC 2023

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[CXF-7368] JAXB provider is handling non-jaxb classes</title>
                <link>https://issues.apache.org/jira/browse/CXF-7368</link>
                <project id="12310511" key="CXF">CXF</project>
                    <description>&lt;p&gt;The default JSONProvider is trying to marshal a non-jaxb class which results in a 500 response of my endpoint.&lt;/p&gt;

&lt;p&gt;One of my endpoints is returning a StreamingOutput object to the response object:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  public static Response okJson(JValue json) {
    return Response.ok(new StreamingOutput() {
      @Override
      public void write(OutputStream s) throws IOException, WebApplicationException {
        try (final BufferedOutputStream bs = new BufferedOutputStream(s)) {
          serializer.fn.toJson(json).apply(bs);
        }
      }
    }, MediaType.APPLICATION_JSON_TYPE).build();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately, the default JSONProvider is trying to marshal this class because it thinks it is a jaxb supported class. This support check happens in the AbstractJAXBProvider class:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    protected boolean isSupported(Class&amp;lt;?&amp;gt; type, Type genericType, Annotation[] anns) {
        if (jaxbElementClassMap != null &amp;amp;&amp;amp; jaxbElementClassMap.containsKey(type.getName())
            || isSkipJaxbChecks()) {
            return true;
        }
        return isXmlRoot(type)
            || JAXBElement.class.isAssignableFrom(type)
            || objectFactoryOrIndexAvailable(type)
            || (type != genericType &amp;amp;&amp;amp; objectFactoryForType(genericType))
            || org.apache.cxf.jaxrs.utils.JAXBUtils.getAdapter(type, anns) != null;
    
    }

    protected boolean objectFactoryOrIndexAvailable(Class&amp;lt;?&amp;gt; type) {
        return type.getResource(&quot;ObjectFactory.class&quot;) != null
               || type.getResource(&quot;jaxb.index&quot;) != null; 
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The issue is that the objectFactoryOrIndexAvailable is returning true which doesn&apos;t indicate that the type itself is a jaxb class. To fix the support method it should actually check if there is a jaxb.index file and if in the index file the current type is available. Then we can clearly say it&apos;s a jaxb supported class.&lt;/p&gt;

&lt;p&gt;Something like this:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;        return isXmlRoot(type)
            || JAXBElement.class.isAssignableFrom(type)
            || (objectFactoryOrIndexAvailable(type) &amp;amp;&amp;amp; indexContainsType(type))
            || (type != genericType &amp;amp;&amp;amp; objectFactoryForType(genericType))
            || org.apache.cxf.jaxrs.utils.JAXBUtils.getAdapter(type, anns) != null;

    protected boolean indexContainsType(Class&amp;lt;?&amp;gt; type) {
      try (BufferedReader reader = new BufferedReader(new InputStreamReader(type.getResourceAsStream(&quot;jaxb.index&quot;)))) {
        String line = null;
        while((line = reader.readLine()) != null) {
          if(line.contains(type.getName()))
            return true;
        }
      }
      return false;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="13071076">CXF-7368</key>
            <summary>JAXB provider is handling non-jaxb classes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sergey_beryozkin">Sergey Beryozkin</assignee>
                                    <reporter username="lrohner">Lukas Rohner</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 May 2017 08:14:29 +0000</created>
                <updated>Tue, 1 Aug 2017 16:42:11 +0000</updated>
                            <resolved>Fri, 12 May 2017 10:12:25 +0000</resolved>
                                    <version>3.1.11</version>
                                    <fixVersion>3.1.12</fixVersion>
                    <fixVersion>3.0.14</fixVersion>
                    <fixVersion>3.2.0</fixVersion>
                                    <component>JAX-RS</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                                                                <comments>
                            <comment id="16006706" author="sergey_beryozkin" created="Thu, 11 May 2017 16:20:10 +0000"  >&lt;p&gt;Reading and parsing the index file will be expensive for the isSupported checks that are done on every read/write request.&lt;br/&gt;
If you do not use JSONProvider then you can simply exclude it from the classpath, the other option is to extend it and handle isSupported as needed. You can also have MessageBodyWriter typed on StreamingOutput. One of these 3 options should do. &lt;br/&gt;
Otherwise, If jaxb.index is available then the best thing we can do is to check it is not some well known type like InputStream or StreamingOutput that is being checked&lt;/p&gt;
</comment>
                            <comment id="16007911" author="sergey_beryozkin" created="Fri, 12 May 2017 10:11:52 +0000"  >&lt;p&gt;I&apos;ve added a check for few well-known types; given that the issue arises only when jaxb.index is present IMHO it is enough. In principle we can also split CXF BinaryProvider into many typed providers which would&apos;ve fixed it too, but that still would not cover the case where some other non-JAXB type which is not supported OOB by CXF could be mistakenly accepted by the JAXB providers if jaxb.index is available - in such cases one of the 3 options I mentioned earlier should be used&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 3 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3etj3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>