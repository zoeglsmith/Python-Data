<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat May 27 09:43:32 UTC 2023

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[CXF-4529] PermGen Leak for CXFAuthenticator (WS Client Configuration)</title>
                <link>https://issues.apache.org/jira/browse/CXF-4529</link>
                <project id="12310511" key="CXF">CXF</project>
                    <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;seemes to me there is a memory leak with the CXFAuthenticator. There is a static reference to it in java.net.Authenticator.theAuthenticator .&lt;br/&gt;
This prevents the GC from collecting the WebappClassLoader on hot undeployment.&lt;/p&gt;

&lt;p&gt;I helped myself by doing &lt;/p&gt;

&lt;p&gt;java.net.Authenticator.setDefault(null);&lt;/p&gt;

&lt;p&gt;on contextDestroy().&lt;/p&gt;

&lt;p&gt;Our web application uses CXF as a jasWS client configured with Spring 3.0.5.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Apache Tomcat 7, Windows 7 32bit&lt;/p&gt;</environment>
        <key id="12609717">CXF-4529</key>
            <summary>PermGen Leak for CXFAuthenticator (WS Client Configuration)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="holger.sunke@bodo-peters.de">Holger Sunke</reporter>
                        <labels>
                            <label>leak</label>
                            <label>permgen</label>
                    </labels>
                <created>Mon, 1 Oct 2012 06:59:45 +0000</created>
                <updated>Fri, 11 Oct 2013 06:48:59 +0000</updated>
                            <resolved>Mon, 19 Nov 2012 21:10:34 +0000</resolved>
                                    <version>2.6.1</version>
                                    <fixVersion>2.7.1</fixVersion>
                                    <component>Configuration</component>
                    <component>JAX-WS Runtime</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="13473999" author="ffang" created="Thu, 11 Oct 2012 09:42:08 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;In my option it&apos;s not a memory leak,  per the code in&lt;br/&gt;
java.net.Authenticator&lt;br/&gt;
// The system-wide authenticator object.  See setDefault().&lt;br/&gt;
    private static Authenticator theAuthenticator;&lt;br/&gt;
It&apos;s system-wide object, so it&apos;s intended behavior to not gc, and this code is out of CXF code base, CXF can&apos;t change this behavior.&lt;br/&gt;
BTW, when you use &lt;br/&gt;
java.net.Authenticator.setDefault(null);&lt;br/&gt;
it cause system-wide effect so it may affect other module which need use this  theAuthenticator.&lt;/p&gt;

&lt;p&gt;Anyway, it shouldn&apos;t be a CXF issue&lt;/p&gt;

&lt;p&gt;Freeman&lt;/p&gt;</comment>
                            <comment id="13476776" author="jurna" created="Tue, 16 Oct 2012 06:02:06 +0000"  >&lt;p&gt;This is defenitely a classloader leak. CXFAuthenticator is loaded by webapp classloader and reference of this object is set to java system class, which is loaded by system classloader. So when application is unloaded, webapp classloader cannot be garbage collected, because CXFAuthenticator is referenced from java.net.Authenticator. This creates PermGen leak.&lt;br/&gt;
This issue must be reopened.&lt;/p&gt;</comment>
                            <comment id="13481426" author="pnidl" created="Mon, 22 Oct 2012 15:12:16 +0000"  >&lt;p&gt;I agree with Danielius. This is definitely a classloader leak. Although it is caused by design of java.net.Authenticator class the problem comes from CXF that either should not rely on java.net.Authenticator or should come with solution that allows its correct cleanup. Also the workaround mentioned by Freeman (java.net.Authenticator.setDefault(null)) will not work correctly because it can wipe out all authenticators possibly registered by other (still running) applications.&lt;/p&gt;</comment>
                            <comment id="13498659" author="pnidl" created="Fri, 16 Nov 2012 07:41:33 +0000"  >&lt;p&gt;And there is another problem related to this one. When you have two (or more) applications deployed to application server, each of them using CXFAuthenticator, and you stop one of them, the alive one will fail to proceed with authentication task because the still registered CXFAuthenticator fails to load its necessary classes because is classloader is already marked as stopped. On Tomcat this looks like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Nov 15, 2012 9:24:19 PM org.apache.catalina.loader.WebappClassLoader loadClass
INFO: Illegal access: &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; web application instance has been stopped already.  Could not load org.apache.cxf.message.MessageImpl.  The eventual following stack trace is caused by an error thrown &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException

	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1597)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1556)
	at org.apache.cxf.endpoint.ClientImpl.getConduit(ClientImpl.java:835)
	at org.apache.cxf.endpoint.ClientImpl.destroy(ClientImpl.java:206)
	at org.apache.cxf.frontend.ClientProxy.finalize(ClientProxy.java:94)
	at java.lang.ref.Finalizer.invokeFinalizeMethod(Native Method)
	at java.lang.ref.Finalizer.runFinalizer(Finalizer.java:83)
	at java.lang.ref.Finalizer.access$100(Finalizer.java:14)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:160)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But I suppose that this problem really is unresolvable and the solution is to use Commons HTTPClient for HTTP Conduit (&lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-291&quot; title=&quot;Support Commons HTTP Client for HTTP conduit&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-291&quot;&gt;&lt;del&gt;CXF-291&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="13500655" author="dkulp" created="Mon, 19 Nov 2012 21:10:34 +0000"  >
&lt;p&gt;I&apos;ve attempted to create a fix for this that won&apos;t lock up the classloaders.   Basically, it creates a new URLClassloader (so no deps to CXF) and uses the byte[] for a class that doesn&apos;t have any other CXF deps defined there to create a class to set into the Authenticator.   That class uses a SoftReference to the &quot;real&quot; CXFAuthenticator.  I hope that will allow the CXF stuff to be completely collected.   I&apos;d appreciate it if someone could try tonights 2.7.1-SNAPSHOTS to see if that really helps or not.&lt;/p&gt;</comment>
                            <comment id="13565279" author="gediminas.rimsa" created="Tue, 29 Jan 2013 11:00:02 +0000"  >&lt;p&gt;This is still an issue in parallel deployment setup (when there are multiple versions of the same application running at times). When a new instance of application calls CXFAuthenticator.addAuthenticator(), it wraps the ReferencingAuthenticator from the previous application instance, thus preventing its classloader from being garbage collected later.&lt;/p&gt;

&lt;p&gt;After a few such deployments, the GC roots of the first undeployed application classloader (which should be garbage collected) look like this:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;this     - value: org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader #7
 &amp;lt;- classloader     - class: java.security.ProtectionDomain, value: org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader #7
  &amp;lt;- [3]     - class: java.security.ProtectionDomain[], value: java.security.ProtectionDomain #575
   &amp;lt;- context     - class: java.security.AccessControlContext, value: java.security.ProtectionDomain[] #8 (21 items)
    &amp;lt;- acc     - class: java.net.URLClassLoader, value: java.security.AccessControlContext #11
     &amp;lt;- &amp;lt;classLoader&amp;gt;     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: java.net.URLClassLoader #4
      &amp;lt;- &amp;lt;class&amp;gt;     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator class ReferencingAuthenticator
       &amp;lt;- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
        &amp;lt;- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
         &amp;lt;- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
          &amp;lt;- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
           &amp;lt;- wrapped     - class: org.apache.cxf.transport.http.ReferencingAuthenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
            &amp;lt;- theAuthenticator     - class: java.net.Authenticator, value: org.apache.cxf.transport.http.ReferencingAuthenticator #1
             &amp;lt;- [14507]     - class: java.lang.Object[], value: java.net.Authenticator class Authenticator
              &amp;lt;- elementData     - class: java.util.Vector, value: java.lang.Object[] #196029 (20&#160;480 items)
               &amp;lt;- classes     - class: org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader, value: java.util.Vector #15121
                &amp;lt;- contextClassLoader (thread object)     - class: java.lang.Thread, value: org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader #1
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Edit for workaround when CXFAuthenticator is not required:&lt;br/&gt;
We overcame this issue by simply setting CXFAuthenticator#setup field to true on application startup.&lt;/p&gt;</comment>
                            <comment id="13622045" author="jurna" created="Thu, 4 Apr 2013 11:15:00 +0000"  >&lt;p&gt;Is this issue going to be reopened any time? It is clearly not fixed.&lt;/p&gt;</comment>
                            <comment id="13622184" author="dkulp" created="Thu, 4 Apr 2013 13:25:39 +0000"  >&lt;p&gt;The ReferencingAuthenticator is not loaded from the same classloader as the rest of CXF, its now from a ClassLoader which uses the system classloader as the parent.  Thus, the &quot;leak&quot; is very minimal (single byte[] class) as it doesn&apos;t hold onto all the CXF classes.  Also, once the real authenticator (CXFAuthenticator class) is gc&apos;d, a call into the system authenticator may start a process of removing themselves (although that process looks slightly wrong.  (need to double check that).&lt;/p&gt;

&lt;p&gt;In anycase, as far as we&apos;re concerned, it&apos;s &quot;fixed&quot; as well as we can.   If someone has a patch that can provide a better solution, feel free to submit it and we&apos;ll consider it.&lt;/p&gt;</comment>
                            <comment id="13792408" author="nihongye" created="Fri, 11 Oct 2013 06:48:14 +0000"  >&lt;p&gt;but in CXFAuthenticator &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; cls = loader.loadClass(ReferencingAuthenticator.&lt;span class=&quot;code-keyword&quot;&gt;class.&lt;/span&gt;getName());
                Authenticator auth = (Authenticator)cls.getConstructor(Authenticator.class, Authenticator.class)
                    .newInstance(instance, wrapped);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&#8220;newInstance(instance, wrapped)&#8221; param instance is load by webappclassloader,so the webappclassloader is refence from the system classloader&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>239839</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 34 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00uav:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2841</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>