<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat May 27 09:45:20 UTC 2023

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[CXF-7473] ExceptionMapper class hierarchies: incompatible ExceptionMapper selected</title>
                <link>https://issues.apache.org/jira/browse/CXF-7473</link>
                <project id="12310511" key="CXF">CXF</project>
                    <description>&lt;p&gt;CXF seems to select an incompatible ExceptionMapper when using class hierarchies.&lt;/p&gt;

&lt;p&gt;More precisely, if I define an abstract exception class like following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@Provider
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;AbstractExceptionMapper&amp;lt;E &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Throwable&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; ExceptionMapper&amp;lt;E&amp;gt; {
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I define a concrete one for IllegalArgumentExceptions:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;IllegalArgumentExceptionMapper &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; AbstractExceptionMapper&amp;lt;IllegalArgumentException&amp;gt; {
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;IllegalArgumentExceptionMapper will then be selected even for RuntimeException subtypes unrelated to IllegalArgumentExceptions.&lt;/p&gt;

&lt;p&gt;See minimal project showing the problem &lt;a href=&quot;https://github.com/jlepage-appdirect/cxf-exception-mapper-bug&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similar (if not same) problem seems to have been reported via &lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-6635&quot; title=&quot;Wrong ExceptionMapper Chosen When a Hierarchy is Used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-6635&quot;&gt;&lt;del&gt;CXF-6635&lt;/del&gt;&lt;/a&gt;, but I do see this with 3.1.11 and 3.1.12.&lt;/p&gt;

&lt;p&gt;Thx!&lt;/p&gt;</description>
                <environment></environment>
        <key id="13094493">CXF-7473</key>
            <summary>ExceptionMapper class hierarchies: incompatible ExceptionMapper selected</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sergey_beryozkin">Sergey Beryozkin</assignee>
                                    <reporter username="jlepage-appdirect">Jocelyn Lepage</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Aug 2017 14:47:05 +0000</created>
                <updated>Wed, 7 Feb 2018 14:52:06 +0000</updated>
                            <resolved>Thu, 1 Feb 2018 13:24:04 +0000</resolved>
                                    <version>3.1.11</version>
                    <version>3.1.12</version>
                                    <fixVersion>3.2.2</fixVersion>
                    <fixVersion>3.1.15</fixVersion>
                                    <component>JAX-RS</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="16152484" author="deki" created="Mon, 4 Sep 2017 11:12:28 +0000"  >&lt;p&gt;Thanks for the bug report. I was able to reproduce this and commited ProviderFactoryHierarchicalExceptionMapperTest for it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sergey_beryozkin&quot; class=&quot;user-hover&quot; rel=&quot;sergey_beryozkin&quot;&gt;sergey_beryozkin&lt;/a&gt; can you please take a look? I think ProviderFactory.getGenericInterfaces needs to be changed but you already did several fixes in the past and I don&apos;t want to introduce new issues...&lt;/p&gt;</comment>
                            <comment id="16152523" author="sergey_beryozkin" created="Mon, 4 Sep 2017 12:00:17 +0000"  >&lt;p&gt;Thanks, I&apos;d rather avoid risking tweaking that code to support yet another hierarchy right just a day or so before the release...&lt;br/&gt;
By the way, the question is, given this declaration, &quot;E extends Throwable&quot;, why selecting IllegalArgumentExceptionMapper is a mistake given that both UnmappedRuntimeException and IllegalArgumentExceptionMapper extend Throwable ?&lt;/p&gt;</comment>
                            <comment id="16152531" author="deki" created="Mon, 4 Sep 2017 12:05:15 +0000"  >&lt;p&gt;Well in this case E is IllegalArgumentException and therefore you&apos;ll get a ClassCastException.&lt;/p&gt;

&lt;p&gt;But you&apos;re right, we should postpone it to 3.2.1.&lt;/p&gt;</comment>
                            <comment id="16152533" author="sergey_beryozkin" created="Mon, 4 Sep 2017 12:08:21 +0000"  >&lt;p&gt;Is that visible at the runtime, that is what I&apos;m not quite sure ?&lt;/p&gt;</comment>
                            <comment id="16152535" author="sergey_beryozkin" created="Mon, 4 Sep 2017 12:09:04 +0000"  >&lt;p&gt;Probably is, will need to check...&lt;/p&gt;</comment>
                            <comment id="16152544" author="deki" created="Mon, 4 Sep 2017 12:13:53 +0000"  >&lt;p&gt;It is, put a breakpoint in ProviderFactory.getGenericInterfaces and run ProviderFactoryHierarchicalExceptionMapperTest.&lt;/p&gt;</comment>
                            <comment id="16152558" author="sergey_beryozkin" created="Mon, 4 Sep 2017 12:30:29 +0000"  >&lt;p&gt;Thanks, do you reckon there&apos;s an obvious fix there ? I&apos;d just like to avoid Syncope (or others who may have some hierarchies) starting failing so indeed, lets make it work for 3.2.1&lt;/p&gt;</comment>
                            <comment id="16152604" author="deki" created="Mon, 4 Sep 2017 13:28:55 +0000"  >&lt;p&gt;I think if actualType is present and doesn&apos;t match we need to skip further processing: &lt;a href=&quot;https://github.com/deki/cxf/commit/ccfa72289b3fbba46db0a9f8824011aefde8c9ba&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://github.com/deki/cxf/commit/ccfa72289b3fbba46db0a9f8824011aefde8c9ba&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="16152625" author="sergey_beryozkin" created="Mon, 4 Sep 2017 13:41:55 +0000"  >&lt;p&gt;I vaguely recall that the reason I did that extra check is that further drilling down due to the current actualType being of some parameterized/etc types does make it right for some hierarchies.&lt;/p&gt;

&lt;p&gt;I guess it would be a bit safer if we check that if the actual type is not null and it is not in the java.lang.reflect package then do that check ?&lt;/p&gt;

&lt;p&gt;By the way, I think &apos;types&apos; can never be null, so you can safely remove that &quot;if types != null&quot; check...&lt;/p&gt;

&lt;p&gt;thanks   &lt;/p&gt;</comment>
                            <comment id="16153274" author="sergey_beryozkin" created="Tue, 5 Sep 2017 08:40:40 +0000"  >&lt;p&gt;Sorry, please ignore those comments about the package check...&lt;br/&gt;
Can you please reformat a patch a bit, remove a types null check, so that I can spot what exactly has changed ? &lt;/p&gt;</comment>
                            <comment id="16153276" author="sergey_beryozkin" created="Tue, 5 Sep 2017 08:42:46 +0000"  >&lt;p&gt;Ignore that too please...&lt;/p&gt;</comment>
                            <comment id="16153284" author="deki" created="Tue, 5 Sep 2017 08:47:59 +0000"  >&lt;p&gt;I added the null check because I was actually returning null in this case. But I can change that to empty Type array.&lt;/p&gt;

&lt;p&gt;Probably we should add more unittests first to ensure the cases from &lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-6635&quot; title=&quot;Wrong ExceptionMapper Chosen When a Hierarchy is Used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-6635&quot;&gt;&lt;del&gt;CXF-6635&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-5348&quot; title=&quot;Exception mappers implementing ExceptionMapper through an abstract class are not mapped to the declared exception &quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-5348&quot;&gt;&lt;del&gt;CXF-5348&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-6067&quot; title=&quot;ProviderFactory fails to analyze generic types correctly with some class hierachies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-6067&quot;&gt;&lt;del&gt;CXF-6067&lt;/del&gt;&lt;/a&gt; are still working after the change.&lt;/p&gt;</comment>
                            <comment id="16153292" author="sergey_beryozkin" created="Tue, 5 Sep 2017 08:54:39 +0000"  >&lt;p&gt;Yes please; you are also right makes sense to add few more tests. Do all of JAXRS tests pass with this change, in rt/frontened/jaxrs and systests/jaxrs at least ?&lt;/p&gt;</comment>
                            <comment id="16156745" author="deki" created="Thu, 7 Sep 2017 09:39:16 +0000"  >&lt;p&gt;You were right, my fix didn&apos;t cover all cases (org.apache.cxf.jaxrs.provider.ProviderFactoryTest#testGetComplexProvider2 was failing).&lt;/p&gt;

&lt;p&gt;So instead of fixing it in ProviderFactory#getGenericInterfaces, maybe we should add another check in ProviderFactory#handleMapper to ensure that mapperClass really fits?&lt;/p&gt;</comment>
                            <comment id="16156837" author="sergey_beryozkin" created="Thu, 7 Sep 2017 11:45:27 +0000"  >&lt;p&gt;Hi Dennis&lt;/p&gt;

&lt;p&gt;The somewhat funny thing is that that test is totally broken, no idea how I could leave a test asking to get a Book MBR asserts that the returned MBR is the one which only supports AType. It&apos;s not easy to spot, even you did not see it it was broken &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m working now on applying your fix&lt;br/&gt;
Thanks&lt;/p&gt;</comment>
                            <comment id="16158837" author="sergey_beryozkin" created="Fri, 8 Sep 2017 15:58:27 +0000"  >&lt;p&gt;I&apos;m afraid it requires more time to fix it, the first step is to patch the existing code (for the next version), and then - throw it away and do a proper code checking the types, bounds, etc for a new master&lt;/p&gt;</comment>
                            <comment id="16348532" author="sergey_beryozkin" created="Thu, 1 Feb 2018 12:53:12 +0000"  >&lt;p&gt;I&apos;m revisiting this issue and have a workaround in place.&lt;br/&gt;
The biggest problem I&apos;ve found with the existing code is how to decide when to stop intrspecting.&lt;br/&gt;
Two examples:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;AbstractExceptionMapper&amp;lt;E &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Throwable&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; ExceptionMapper&amp;lt;E&amp;gt; {
}
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;IllegalArgumentExceptionMapper &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; AbstractExceptionMapper&amp;lt;IllegalArgumentException&amp;gt; {
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;JacksonJsonProvider
    &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; ProviderBase&amp;lt;JacksonJsonProvider,
        ObjectMapper,
        JsonEndpointConfig, JsonMapperConfigurator&amp;gt;
{
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the former case we get IllegalArgumentException in the 1st step (when checking the generic superclass), in the former - need to continue recursing. I&apos;ve tried checking the generic interfaces only, but in this case it works OK for Jackson as it is typed by Object (MBR, MBW), while fails for the test case as the generic interface reveals Throwable only.&lt;br/&gt;
I suspect a clean way exists to make sure it all becomes unambiguous, but it would risky to start rewriting this code in a rush, so, as a workaround, I&apos;m adding  a check which may help the runtime to decide that in case of a mismatch no more recursing is needed... I&apos;ll keep the issue open though for now &lt;/p&gt;</comment>
                            <comment id="16348569" author="sergey_beryozkin" created="Thu, 1 Feb 2018 13:24:04 +0000"  >&lt;p&gt;I guess I&apos;d rather resolve it, and the future improvements would be better tracked in dedicated issues&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12903728">CXF-6635</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12674811">CXF-5348</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12751138">CXF-6067</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 17 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3irfb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>