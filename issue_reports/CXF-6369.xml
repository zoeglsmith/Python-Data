<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat May 27 09:47:00 UTC 2023

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[CXF-6369] org.apache.cxf.jaxrs.impl.ConfigurationImpl does not comply with SPEC</title>
                <link>https://issues.apache.org/jira/browse/CXF-6369</link>
                <project id="12310511" key="CXF">CXF</project>
                    <description>&lt;p&gt;According to &lt;a href=&quot;http://docs.oracle.com/javaee/7/api/javax/ws/rs/core/Configurable.html&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://docs.oracle.com/javaee/7/api/javax/ws/rs/core/Configurable.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a general rule, for each JAX-RS component class there can be at most one registration &#8212; class-based or instance-based &#8212; configured at any given moment. Implementations MUST reject any attempts to configure a new registration for a provider class that has been already registered in the given configurable context earlier. Implementations SHOULD also raise a warning to inform the user about the rejected component registration.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt; config.register(GzipInterceptor.class, WriterInterceptor.class);&lt;br/&gt;
 config.register(GzipInterceptor.class);       // Rejected by runtime.&lt;br/&gt;
 config.register(new GzipInterceptor());       // Rejected by runtime.&lt;br/&gt;
 config.register(GzipInterceptor.class, 6500); // Rejected by runtime.&lt;/p&gt;

&lt;p&gt;So we need to check whether the same class&apos;s instances have already been put into config before hand.&lt;/p&gt;

&lt;p&gt;Also to check whether the class/instance has been registered via  public boolean isRegistered(Class&amp;lt;?&amp;gt; cls) , we need to check whether the two class is the same other than just isAssignableFrom.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12823669">CXF-6369</key>
            <summary>org.apache.cxf.jaxrs.impl.ConfigurationImpl does not comply with SPEC</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sergey_beryozkin">Sergey Beryozkin</assignee>
                                    <reporter username="irisding">Iris Ding</reporter>
                        <labels>
                    </labels>
                <created>Fri, 24 Apr 2015 06:46:37 +0000</created>
                <updated>Fri, 14 Oct 2016 14:23:57 +0000</updated>
                            <resolved>Fri, 24 Apr 2015 11:29:15 +0000</resolved>
                                    <version>3.0.3</version>
                    <version>3.0.4</version>
                    <version>2.7.15</version>
                                    <fixVersion>3.1</fixVersion>
                    <fixVersion>3.0.5</fixVersion>
                                    <component>JAX-RS</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                                                                <comments>
                            <comment id="14510572" author="irisding" created="Fri, 24 Apr 2015 06:54:23 +0000"  >&lt;p&gt;The proposed change is in org.apache.cxf.jaxrs.impl.ConfigurationImpl, Two methods need be modified:&lt;/p&gt;

&lt;p&gt; @Override&lt;br/&gt;
    public boolean isRegistered(Class&amp;lt;?&amp;gt; cls) {&lt;br/&gt;
        for (Object o : getInstances()) {&lt;br/&gt;
            // if (cls.isAssignableFrom(o.getClass())) {&lt;br/&gt;
            if (cls == (o.getClass())) &lt;/p&gt;
{
                return true;
            }
&lt;p&gt;        }&lt;br/&gt;
        return false;&lt;br/&gt;
    }&lt;/p&gt;


&lt;p&gt; public void register(Object provider, Map&amp;lt;Class&amp;lt;?&amp;gt;, Integer&amp;gt; contracts) {&lt;br/&gt;
       //need to check whether existed already, If so, remove the old entry before hand -start here&lt;br/&gt;
        Object duplicate = null;&lt;br/&gt;
        for (Object o : providers.keySet())&lt;br/&gt;
        {&lt;br/&gt;
            if (o.getClass() == provider.getClass())&lt;/p&gt;
            {
                duplicate = o;
                break;
            }

&lt;p&gt;        }&lt;br/&gt;
        providers.remove(duplicate);&lt;br/&gt;
      ////need to check whether existed already, If so, remove the old entry before hand &amp;#8211; end here&lt;br/&gt;
        if (provider.getClass() == Class.class) &lt;/p&gt;
{
            provider = createProvider((Class&amp;lt;?&amp;gt;) provider);
        }
&lt;p&gt;        Map&amp;lt;Class&amp;lt;?&amp;gt;, Integer&amp;gt; metadata = providers.get(provider);&lt;br/&gt;
        if (metadata == null) &lt;/p&gt;
{
            metadata = new HashMap&amp;lt;Class&amp;lt;?&amp;gt;, Integer&amp;gt;();
            providers.put(provider, metadata);
        }
&lt;p&gt;        for (Class&amp;lt;?&amp;gt; contract : contracts.keySet()) {&lt;br/&gt;
            if (contract.isAssignableFrom(provider.getClass())) &lt;/p&gt;
{
                metadata.put(contract, contracts.get(contract));
            }
&lt;p&gt;        }&lt;br/&gt;
    }&lt;/p&gt;</comment>
                            <comment id="14510824" author="sergey_beryozkin" created="Fri, 24 Apr 2015 11:18:22 +0000"  >&lt;p&gt;The change to isRegistered is fine, but I&apos;m not sure about the 2nd one, I think it is sufficient to check if a given provider has already been registered and if yes then issue a warning as per the Java docs and return&lt;/p&gt;</comment>
                            <comment id="14513411" author="irisding" created="Mon, 27 Apr 2015 01:51:39 +0000"  >&lt;p&gt;HI Sergey,&lt;/p&gt;

&lt;p&gt;For the 2nd change:&lt;br/&gt;
//need to check whether existed already, If so, remove the old entry before hand -start here&lt;br/&gt;
Object duplicate = null;&lt;br/&gt;
for (Object o : providers.keySet())&lt;/p&gt;
{
if (o.getClass() == provider.getClass())
{ duplicate = o; break; }
&lt;p&gt;}&lt;br/&gt;
providers.remove(duplicate);&lt;br/&gt;
////need to check whether existed already, If so, remove the old entry before hand &#8211; end here&lt;/p&gt;

&lt;p&gt;The reason here is if we have a call like below:&lt;br/&gt;
config.register(GzipInterceptor.class, 6500);&lt;br/&gt;
config.register(GzipInterceptor.class, 7000);&lt;br/&gt;
Then finally GzipInterceptor.class, 7000 should take effect.  In other words, the priority should be overridden by the afterwards provider registration. &lt;br/&gt;
if we simply check whether the given provider has already been registered and reject the registration the above usage scenario can not be satisfied.&lt;/p&gt;
</comment>
                            <comment id="14513733" author="sergey_beryozkin" created="Mon, 27 Apr 2015 08:48:00 +0000"  >&lt;p&gt;Hi, where do you see in the docs that the earlier registration should be removed if the new priority is higher ?&lt;/p&gt;</comment>
                            <comment id="14513739" author="sergey_beryozkin" created="Mon, 27 Apr 2015 08:51:19 +0000"  >&lt;p&gt;never mind, I see&lt;/p&gt;

&lt;p&gt;// override the priority of registered GzipInterceptor&lt;br/&gt;
// and both of it&apos;s provider contracts&lt;br/&gt;
//  config.register(GzipInterceptor.class, 6500);&lt;/p&gt;

&lt;p&gt;Hmm... So why then the docs in the end of Configurable say:&lt;/p&gt;

&lt;p&gt;config.register(GzipInterceptor.class, WriterInterceptor.class);&lt;br/&gt;
config.register(GzipInterceptor.class, 6500); // Rejected by runtime.&lt;/p&gt;

&lt;p&gt;?&lt;/p&gt;

&lt;p&gt;I&apos;m confused...&lt;/p&gt;
</comment>
                            <comment id="14514118" author="irisding" created="Mon, 27 Apr 2015 13:30:16 +0000"  >&lt;p&gt;I think if the priority is the same, then the 2nd registration will be rejected.&lt;br/&gt;
config.register(GzipInterceptor.class, 6500);&lt;br/&gt;
config.register(GzipInterceptor.class, 6500); // Rejected by runtime.&lt;/p&gt;</comment>
                            <comment id="14514136" author="sergey_beryozkin" created="Mon, 27 Apr 2015 13:39:28 +0000"  >&lt;p&gt;That is a possibility, I&apos;ve asked for the clarification, lets see...&lt;/p&gt;</comment>
                            <comment id="14514320" author="sergey_beryozkin" created="Mon, 27 Apr 2015 15:41:23 +0000"  >&lt;p&gt;I believe I&apos;ve got a confirmation from a spec lead that the original registration of a given provider class does not get removed.&lt;br/&gt;
See a &quot;Registering the same provider class with Configurable&quot; thread at the 370 spec list.&lt;/p&gt;

&lt;p&gt;So if you have a test which expects that the same provider class is replaced even if the next registration has a different priority then this test needs to be challenged&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                            <comment id="14516182" author="irisding" created="Tue, 28 Apr 2015 02:02:48 +0000"  >&lt;p&gt;Thanks Sergey for this clarification. Let&apos;s take a detailed look at the method:&lt;/p&gt;

&lt;p&gt; public void register(Object provider, Map&amp;lt;Class&amp;lt;?&amp;gt;, Integer&amp;gt; contracts) {&lt;br/&gt;
          if (provider.getClass() == Class.class) &lt;/p&gt;
{
            provider = createProvider((Class&amp;lt;?&amp;gt;) provider);
        }&lt;br/&gt;
        Map&amp;lt;Class&amp;lt;?&amp;gt;, Integer&amp;gt; metadata = providers.get(provider);&lt;br/&gt;
        if (metadata == null) {
            metadata = new HashMap&amp;lt;Class&amp;lt;?&amp;gt;, Integer&amp;gt;();
            providers.put(provider, metadata);
        }&lt;br/&gt;
        for (Class&amp;lt;?&amp;gt; contract : contracts.keySet()) {&lt;br/&gt;
            if (contract.isAssignableFrom(provider.getClass())) {
                metadata.put(contract, contracts.get(contract));
            }&lt;br/&gt;
        }&lt;br/&gt;
    }&lt;br/&gt;
&lt;br/&gt;
You can see when register new providers, we will new a provider instance and put it into the LinkedHashMap, In such case,&lt;br/&gt;
config.register(GzipInterceptor.class);&lt;br/&gt;
config.register(GzipInterceptor.class);&lt;br/&gt;
We will have two providers registered as we wil new two provider instances.&lt;br/&gt;
&lt;br/&gt;
How about we use below fix:&lt;br/&gt;
 public void register(Object provider, Map&amp;lt;Class&amp;lt;?&amp;gt;, Integer&amp;gt; contracts) {&lt;br/&gt;
//proposed change start&lt;br/&gt;
        for (Object o : providers.keySet())&lt;br/&gt;
        {&lt;br/&gt;
            if (o.getClass() == provider.getClass())&lt;br/&gt;
            {
               //just return and issue an waringing is possible.
                return;
            }&lt;br/&gt;
&lt;br/&gt;
        }&lt;br/&gt;
//proposed change end&lt;br/&gt;
        if (provider.getClass() == Class.class) {            provider = createProvider((Class&amp;lt;?&amp;gt;) provider);        }
&lt;p&gt;        Map&amp;lt;Class&amp;lt;?&amp;gt;, Integer&amp;gt; metadata = providers.get(provider);&lt;br/&gt;
        if (metadata == null) &lt;/p&gt;
{
            metadata = new HashMap&amp;lt;Class&amp;lt;?&amp;gt;, Integer&amp;gt;();
            providers.put(provider, metadata);
        }
&lt;p&gt;        for (Class&amp;lt;?&amp;gt; contract : contracts.keySet()) {&lt;br/&gt;
            if (contract.isAssignableFrom(provider.getClass())) &lt;/p&gt;
{
                metadata.put(contract, contracts.get(contract));
            }
&lt;p&gt;        }&lt;br/&gt;
    }&lt;/p&gt;</comment>
                            <comment id="14516701" author="sergey_beryozkin" created="Tue, 28 Apr 2015 09:10:35 +0000"  >&lt;p&gt;Hi Iris, please update the code, you will see this line:&lt;/p&gt;

&lt;p&gt;&quot;if (isRegistered(provider)) &lt;/p&gt;
{ return false }
&lt;p&gt;; &quot;&lt;/p&gt;

&lt;p&gt;thanks&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 5 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2dpc7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>