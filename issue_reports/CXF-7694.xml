<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat May 27 09:42:39 UTC 2023

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[CXF-7694] spring boot jax-rs sample creates incorrect urls in swagger</title>
                <link>https://issues.apache.org/jira/browse/CXF-7694</link>
                <project id="12310511" key="CXF">CXF</project>
                    <description>&lt;p&gt;The sample code in&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/cxf/tree/master/distribution/src/main/release/samples/jax_rs/spring_boot&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://github.com/apache/cxf/tree/master/distribution/src/main/release/samples/jax_rs/spring_boot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;creates in swagger ui urls like&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:8080/sayHello/q&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://localhost:8080/sayHello/q&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;which do not work, instead of&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:8080/services/helloservice/sayHello/&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://localhost:8080/services/helloservice/sayHello/q&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The problem started w. the commit of&#160; &quot;&lt;a href=&quot;https://github.com/apache/cxf/commit/5b7308408d8b0127a5ee4deea7bd66b44217dd58&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;[CXF-7634] changed Spring Boot sample to use OpenApiFeature&lt;/a&gt;&quot;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13149376">CXF-7694</key>
            <summary>spring boot jax-rs sample creates incorrect urls in swagger</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="deki">Dennis Kieselhorst</assignee>
                                    <reporter username="presto9292">pre sto</reporter>
                        <labels>
                    </labels>
                <created>Sun, 1 Apr 2018 19:57:51 +0000</created>
                <updated>Mon, 25 Mar 2019 12:28:23 +0000</updated>
                            <resolved>Tue, 3 Apr 2018 19:58:23 +0000</resolved>
                                    <version>3.2.4</version>
                                    <fixVersion>3.2.5</fixVersion>
                                    <component>JAX-RS</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="16424512" author="deki" created="Tue, 3 Apr 2018 19:58:23 +0000"  >&lt;p&gt;CXF supports both OpenAPI spec 2 (the old classic Swagger stuff) and the new OpenAPI spec 3. I changed the sample to use the new one. While dynamicBasePath was default for Swagger2Feature it has to be set explictly for OpenApiFeature. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=reta&quot; class=&quot;user-hover&quot; rel=&quot;reta&quot;&gt;reta&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ilgrosso&quot; class=&quot;user-hover&quot; rel=&quot;ilgrosso&quot;&gt;ilgrosso&lt;/a&gt; was this intended?&lt;/p&gt;

&lt;p&gt;Anyway I&apos;ve fixed the sample in master branch.&lt;/p&gt;</comment>
                            <comment id="16424560" author="reta" created="Tue, 3 Apr 2018 20:36:31 +0000"  >&lt;p&gt;Good one, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=deki&quot; class=&quot;user-hover&quot; rel=&quot;deki&quot;&gt;deki&lt;/a&gt;, I was trying to figure out the use cases when dynamicBasePath might be of use, even talked to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sergey_beryozkin&quot; class=&quot;user-hover&quot; rel=&quot;sergey_beryozkin&quot;&gt;sergey_beryozkin&lt;/a&gt; at the time, and we kind of were not sure it should be set to &quot;true&quot; by default. Spring Boot is a good example when it is needed. The absence of the base path notation in the OpenAPI 3.0 also contributed to this decision (there is `servers` section). Do you think we have to reconsider the default behavior or adjusting the sample (+ documentation) would be the way to go? Thanks!&lt;/p&gt;</comment>
                            <comment id="16425067" author="ilgrosso" created="Wed, 4 Apr 2018 06:24:27 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=deki&quot; class=&quot;user-hover&quot; rel=&quot;deki&quot;&gt;deki&lt;/a&gt; as far as I remember, it was not intentional: +1 to align OpenAPI 3.0 and Swagger 2.0 features.&lt;/p&gt;</comment>
                            <comment id="16429832" author="reta" created="Sun, 8 Apr 2018 18:14:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ilgrosso&quot; class=&quot;user-hover&quot; rel=&quot;ilgrosso&quot;&gt;ilgrosso&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=deki&quot; class=&quot;user-hover&quot; rel=&quot;deki&quot;&gt;deki&lt;/a&gt; Sorry for the delay guys. So I&apos;ve looked into the differences between Swagger2 and OpenApi integration with respect to customizer usage. The &lt;b&gt;Swagger2Feature&lt;/b&gt; always creates &lt;b&gt;Swagger2Customizer&lt;/b&gt; instance and forceably sets the &quot;&lt;b&gt;dynamicBasePath&lt;/b&gt;&quot; to &quot;&lt;b&gt;true&lt;/b&gt;&quot; (irrespective what is set in the &lt;b&gt;Swagger2Customizer&lt;/b&gt; instance). Whereas &lt;b&gt;OpenApiFeature&lt;/b&gt; does not do that and uses the &lt;b&gt;OpenApiCustomizer&lt;/b&gt; only when it is provided (the reason for that is that integration of the customizer into OpenApi is much more engaging than in Swagger2, if it could be avoided it would be better), as such accepting the customizer properties as is. Also, the difference at large is that there is no &lt;b&gt;basePath&lt;/b&gt; property in the OpenApi v3.0 specification anymore, there are other means to inject this metadata into the specification (&lt;b&gt;servers&lt;/b&gt; component). If you guys agree, I would prefer to keep it this way, at least the customization is now respected as-is, no altering from the &lt;b&gt;OpenApiFeature&lt;/b&gt; side. What do you think?&lt;/p&gt;</comment>
                            <comment id="16429859" author="deki" created="Sun, 8 Apr 2018 19:06:30 +0000"  >&lt;p&gt;I just noticed that pushing my change has failed, I&apos;ve just fixed it and of course setting OpenApiCustomizer works for the sample.&lt;/p&gt;

&lt;p&gt;But I&apos;m wondering how to handle it for the spring_boot_scan sample? With the current implementation it&apos;s no longer possible to scan the default OpenApiFeature as the urls will be incorrect or am I missing something?&lt;/p&gt;</comment>
                            <comment id="16429863" author="reta" created="Sun, 8 Apr 2018 19:30:45 +0000"  >&lt;p&gt;Thanks, Dennis. That&apos;s right, it is problematic with the default one when base path does not match. So we could use at least 4 options which comes to mind first:&lt;/p&gt;

&lt;p&gt;&#160;- allow to specify customizer class in the swagger.properties (in this case, the default OpenApiFeature will work)&lt;/p&gt;

&lt;p&gt;&#160;- subclass the OpenApiFeature with customized one (and supply the customizer)&lt;/p&gt;

&lt;p&gt;&#160;- provide the OpenApiFeature constructor which accepts OpenApiCustomizer instance&lt;/p&gt;

&lt;p&gt;&#160;- supply openapi-configuration.yaml (which could specify servers section with the correct base path)&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="16430140" author="ilgrosso" created="Mon, 9 Apr 2018 06:34:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=reta&quot; class=&quot;user-hover&quot; rel=&quot;reta&quot;&gt;reta&lt;/a&gt; wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you guys agree, I would prefer to keep it this way, at least the customization is now respected as-is, no altering from the OpenApiFeature side. What do you think?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s also fine to me, to keep the existing behavior, if this is not causing troubles to other use-cases, naturally.&lt;/p&gt;</comment>
                            <comment id="16452039" author="deki" created="Wed, 25 Apr 2018 10:37:15 +0000"  >&lt;p&gt;Sorry for the late response. I adapted the Swagger Petstore sample and it&apos;s really ugly that it doesn&apos;t work out of the box: &lt;a href=&quot;https://github.com/deki/swagger-samples/tree/java-cxf-spring-boot-minimal/java/java-cxf-spring-boot-minimal&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://github.com/deki/swagger-samples/tree/java-cxf-spring-boot-minimal/java/java-cxf-spring-boot-minimal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I agree that changing the default within a minor release is bad so I thought of providing openapi-configuration.yaml as Andriy suggested. Unfortunately this isn&apos;t scanned by default, so I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-7728&quot; title=&quot;Scan for OpenAPI config files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-7728&quot;&gt;&lt;del&gt;CXF-7728&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="16453186" author="reta" created="Wed, 25 Apr 2018 22:19:08 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=deki&quot; class=&quot;user-hover&quot; rel=&quot;deki&quot;&gt;deki&lt;/a&gt;, I will take &lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-7728&quot; title=&quot;Scan for OpenAPI config files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-7728&quot;&gt;&lt;del&gt;CXF-7728&lt;/del&gt;&lt;/a&gt; shortly, should be an easy fix.&lt;/p&gt;</comment>
                            <comment id="16506902" author="deki" created="Sat, 9 Jun 2018 10:37:13 +0000"  >&lt;p&gt;Now that &lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-7728&quot; title=&quot;Scan for OpenAPI config files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-7728&quot;&gt;&lt;del&gt;CXF-7728&lt;/del&gt;&lt;/a&gt; is implemented I&apos;ve tried the usecase again. It&apos;s not possible to use our scanning functionality along with provided servers in openapi-configuration.yaml. If an openapi-configuration.yaml is present, the resourcePackages or resourceClasses must be specified there and our scanned packages are ignored. So I&apos;m still thinking it makes sense to add servers by default. We could also try to make this depedended on cxf-spring-boot-autoconfigure. What do you think?&lt;/p&gt;</comment>
                            <comment id="16507003" author="reta" created="Sat, 9 Jun 2018 13:44:21 +0000"  >&lt;p&gt;Right, the Swagger configuration is either taken from openapi-configuration.yaml or done programmatically. However, I think we could have very simple solution which leverages our own `swagger.properties` feature. So we could use this file to set the property (&lt;b&gt;dynamicBasePath&lt;/b&gt;) which could be backed by implicit instance of the OpenApiCustomizer. Additionally, I agree with your idea that we could also make it default case for Spring Boot auto-configuration and precreate OpenApiCustomizer bean instance.&lt;/p&gt;</comment>
                            <comment id="16631593" author="nmwael" created="Fri, 28 Sep 2018 09:18:27 +0000"  >&lt;p&gt;I cannot get this to work on 3.2.6 unless I do so:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Configuration
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;FeaturesConfig {
    @Bean(&lt;span class=&quot;code-quote&quot;&gt;&quot;openApiFeature&quot;&lt;/span&gt;)
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Feature swagger2Feature() {
        OpenApiFeature result = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenApiFeature();
        result.setTitle(&lt;span class=&quot;code-quote&quot;&gt;&quot;Spring Boot + CXF + Swagger + Docker Example&quot;&lt;/span&gt;);
        result.setDescription(&lt;span class=&quot;code-quote&quot;&gt;&quot;Spring Boot + CXF + Swagger + Docker Example description&quot;&lt;/span&gt;);
        OpenApiCustomizer openApiCustomizer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenApiCustomizer();
        openApiCustomizer.setDynamicBasePath(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        result.setCustomizer(openApiCustomizer);

        result.setPrettyPrint(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result;
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Also there is the issue claimed to be solved by&#160;&lt;del&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-7634&quot; title=&quot;Enrich support for Swagger Core 2.0 (OpenApi Spec 3.0)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CXF-7634&quot;&gt;&lt;del&gt;CXF-7634&lt;/del&gt;&lt;/a&gt;&lt;/del&gt;&#160;&lt;/p&gt;

&lt;p&gt;Only way I get CXF to pickup my yaml are when its called :&#160;swagger.yaml&lt;/p&gt;</comment>
                            <comment id="16631682" author="reta" created="Fri, 28 Sep 2018 10:41:59 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nmwael&quot; class=&quot;user-hover&quot; rel=&quot;nmwael&quot;&gt;nmwael&lt;/a&gt; As of now, the usage of the&#160; OpenApiCustomer is required (in most cases) for Spring Boot since the context path is not known to CXF, so this is expected behavior (the OpenAPI v3 is significantly different from the v2 in the this respect). You may provide the `servers` section by yourself or using openapi-configuration.yaml / json, openapi.yaml / json. The swagger.yaml is not recognized (at least, should not be recognized) by CXF.&lt;/p&gt;</comment>
                            <comment id="16631718" author="nmwael" created="Fri, 28 Sep 2018 11:28:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=reta&quot; class=&quot;user-hover&quot; rel=&quot;reta&quot;&gt;reta&lt;/a&gt; Okay to step one&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;However as on&#160;&#160;3.2.6&#160;&#160;swagger.yaml is the only one recognized if I change to openapi-configuration.yaml or&#160;openapi.yaml it is not picked up.. HOWEVER the content of the yaml can be read in openapi format.. EG:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
openapi: 3.0.1
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http:&lt;span class=&quot;code-comment&quot;&gt;//commonmark.org/help/) or HTML.
&lt;/span&gt;  version: 0.1.9
servers:
- url: /services


&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;except for servers, as have been described earlyer in the thread.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</comment>
                            <comment id="16631792" author="deki" created="Fri, 28 Sep 2018 12:50:01 +0000"  >&lt;p&gt;Hmm can you please compare your code with our sample: &lt;a href=&quot;https://github.com/apache/cxf/tree/cxf-3.2.6/distribution/src/main/release/samples/jax_rs/spring_boot&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://github.com/apache/cxf/tree/cxf-3.2.6/distribution/src/main/release/samples/jax_rs/spring_boot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;openapi.yaml is working there.&lt;/p&gt;

&lt;p&gt;We should definitely change that Spring Boot autoconfig automatically sets OpenApiCustomizer as mentioned earlier.&lt;/p&gt;</comment>
                            <comment id="16631807" author="reta" created="Fri, 28 Sep 2018 13:03:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=deki&quot; class=&quot;user-hover&quot; rel=&quot;deki&quot;&gt;deki&lt;/a&gt; I was thinking about introducing dedicated Spring Boot CXF OpenAPI Starter since not everyone is using OpenAPI, we still have people on Swagger 1.5.x.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nmwael&quot; class=&quot;user-hover&quot; rel=&quot;nmwael&quot;&gt;nmwael&lt;/a&gt; This is interesting, so OpenApiCustomer *&lt;b&gt;will not&lt;/b&gt;* modify the servers if you&#160;provide it manually (like in the snippet you pasted). Could you please try this config with swagger.yaml?&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@Bean(&lt;span class=&quot;code-quote&quot;&gt;&quot;openApiFeature&quot;&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Feature swagger2Feature() { 
    OpenApiFeature result = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenApiFeature(); 
    result.setPrettyPrint(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;); 
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result; 
}&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Thank you.&lt;/p&gt;</comment>
                            <comment id="16631813" author="deki" created="Fri, 28 Sep 2018 13:08:54 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=reta&quot; class=&quot;user-hover&quot; rel=&quot;reta&quot;&gt;reta&lt;/a&gt; The current starter works with both ways depending on the dependencies you add. Why do we need another one?&lt;/p&gt;</comment>
                            <comment id="16631906" author="reta" created="Fri, 28 Sep 2018 14:12:29 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=deki&quot; class=&quot;user-hover&quot; rel=&quot;deki&quot;&gt;deki&lt;/a&gt; That&apos;s is right, but the auto-configuration just scans (among many other things) for the features available, it is&#160;indeed driven by dependencies.&#160;The idea was for Spring Boot deployments to add the&#160;OpenApiCustomer by default to OpenApiFeature (if configured) since most of the time it is required for CXF. Decicated OpenApi starter is just one of the possible options, but others are also available, I created&#160;&lt;a href=&quot;https://issues.apache.org/jira/browse/CXF-7792&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/CXF-7792&lt;/a&gt;&#160;to address that.&lt;/p&gt;</comment>
                            <comment id="16631919" author="deki" created="Fri, 28 Sep 2018 14:21:53 +0000"  >&lt;p&gt;Ok got your point, maybe we can find some other criteria to identify it. It makes sense to have dynamicBaseBath if no valid entries for servers are available...&lt;/p&gt;</comment>
                            <comment id="16631923" author="reta" created="Fri, 28 Sep 2018 14:26:41 +0000"  >&lt;p&gt;Yes, exactly,&#160;will be working in this direction.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 35 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3s11r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>