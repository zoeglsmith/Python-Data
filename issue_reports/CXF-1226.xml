<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat May 27 09:42:49 UTC 2023

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[CXF-1226] elementFormDefault from package-info.java ignored with JAXWS+JAXB when there are no beans</title>
                <link>https://issues.apache.org/jira/browse/CXF-1226</link>
                <project id="12310511" key="CXF">CXF</project>
                    <description>&lt;p&gt;I am using the java-first approach with spring configuration on cxf 2.0.3 and tomcat 5.5. I specified namespace for all the input and output parameters via @WebParam and @WebResult annotation. But the namespace was somehow missing from the SOAP message.&lt;/p&gt;

&lt;p&gt;You can reproduce the problem by using the following test code (server side):&lt;/p&gt;

&lt;p&gt;=================web.xml========================================&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;!DOCTYPE web-app&lt;br/&gt;
    PUBLIC &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;&lt;br/&gt;
    &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;&amp;gt;&lt;br/&gt;
&amp;lt;web-app&amp;gt;&lt;br/&gt;
	&amp;lt;context-param&amp;gt;&lt;br/&gt;
		&amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;&lt;br/&gt;
		&amp;lt;param-value&amp;gt;WEB-INF/beans.xml&amp;lt;/param-value&amp;gt;&lt;br/&gt;
	&amp;lt;/context-param&amp;gt;&lt;br/&gt;
	&amp;lt;listener&amp;gt;&lt;br/&gt;
		&amp;lt;listener-class&amp;gt;org.springframework.web.context.ContextLoaderListener&amp;lt;/listener-class&amp;gt;&lt;br/&gt;
	&amp;lt;/listener&amp;gt;&lt;br/&gt;
	&amp;lt;servlet&amp;gt;&lt;br/&gt;
		&amp;lt;servlet-name&amp;gt;CXFServlet&amp;lt;/servlet-name&amp;gt;&lt;br/&gt;
		&amp;lt;display-name&amp;gt;CXF Servlet&amp;lt;/display-name&amp;gt;&lt;br/&gt;
		&amp;lt;servlet-class&amp;gt;&lt;br/&gt;
			org.apache.cxf.transport.servlet.CXFServlet&lt;br/&gt;
		&amp;lt;/servlet-class&amp;gt;&lt;br/&gt;
		&amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;&lt;br/&gt;
	&amp;lt;/servlet&amp;gt;&lt;br/&gt;
	&amp;lt;servlet-mapping&amp;gt;&lt;br/&gt;
		&amp;lt;servlet-name&amp;gt;CXFServlet&amp;lt;/servlet-name&amp;gt;&lt;br/&gt;
		&amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;&lt;br/&gt;
	&amp;lt;/servlet-mapping&amp;gt;&lt;br/&gt;
&amp;lt;/web-app&amp;gt;&lt;br/&gt;
---------------------------------------------------------------------------------------------------------------&lt;br/&gt;
=================beans.xml=======================================&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;&lt;br/&gt;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;br/&gt;
	xmlns:jaxws=&quot;http://cxf.apache.org/jaxws&quot;&lt;br/&gt;
	xmlns:cxf=&quot;http://cxf.apache.org/core&quot;&lt;br/&gt;
	xsi:schemaLocation=&quot;&lt;br/&gt;
&lt;a href=&quot;http://www.springframework.org/schema/beans&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://www.springframework.org/schema/beans&lt;/a&gt; &lt;a href=&quot;http://www.springframework.org/schema/beans/spring-beans.xsd&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://www.springframework.org/schema/beans/spring-beans.xsd&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://cxf.apache.org/core&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://cxf.apache.org/core&lt;/a&gt; &lt;a href=&quot;http://cxf.apache.org/schemas/core.xsd&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://cxf.apache.org/schemas/core.xsd&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://cxf.apache.org/jaxws&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://cxf.apache.org/jaxws&lt;/a&gt; &lt;a href=&quot;http://cxf.apache.org/schemas/jaxws.xsd&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://cxf.apache.org/schemas/jaxws.xsd&lt;/a&gt;&quot;&amp;gt;&lt;br/&gt;
	&amp;lt;import resource=&quot;classpath:META-INF/cxf/cxf.xml&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;import resource=&quot;classpath:META-INF/cxf/cxf-extension-soap.xml&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;import resource=&quot;classpath:META-INF/cxf/cxf-servlet.xml&quot; /&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;logInbound&quot; class=&quot;org.apache.cxf.interceptor.LoggingInInterceptor&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;logOutbound&quot; class=&quot;org.apache.cxf.interceptor.LoggingOutInterceptor&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;cxf:bus&amp;gt;&lt;br/&gt;
        &amp;lt;cxf:inInterceptors&amp;gt; &amp;lt;ref bean=&quot;logInbound&quot;/&amp;gt;  &amp;lt;/cxf:inInterceptors&amp;gt;&lt;br/&gt;
        &amp;lt;cxf:outInterceptors&amp;gt; &amp;lt;ref bean=&quot;logOutbound&quot;/&amp;gt; &amp;lt;/cxf:outInterceptors&amp;gt;&lt;br/&gt;
        &amp;lt;cxf:inFaultInterceptors&amp;gt;  &amp;lt;ref bean=&quot;logOutbound&quot;/&amp;gt;  &amp;lt;/cxf:inFaultInterceptors&amp;gt;&lt;br/&gt;
    &amp;lt;/cxf:bus&amp;gt; &lt;br/&gt;
    &amp;lt;jaxws:endpoint   id=&quot;helloWorld&quot;  implementor=&quot;demo.spring.HelloWorldImpl&quot; 	  address=&quot;/HelloWorld&quot; /&amp;gt;&lt;br/&gt;
&amp;lt;/beans&amp;gt;&lt;br/&gt;
-----------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
=================HelloWorld.java=======================================&lt;br/&gt;
package demo.spring;&lt;/p&gt;

&lt;p&gt;import javax.jws.WebService;&lt;br/&gt;
import javax.jws.WebMethod;&lt;br/&gt;
import javax.jws.WebParam;&lt;br/&gt;
import javax.jws.WebResult;&lt;br/&gt;
import javax.xml.ws.ResponseWrapper;&lt;br/&gt;
import javax.xml.ws.RequestWrapper;&lt;br/&gt;
import javax.jws.soap.SOAPBinding;&lt;/p&gt;

&lt;p&gt;@WebService(name=&quot;MyHelloWorldService&quot;, targetNamespace=&quot;http://nstest.helloworld&quot;)&lt;br/&gt;
@SOAPBinding(	parameterStyle=SOAPBinding.ParameterStyle.WRAPPED,&lt;br/&gt;
				style=SOAPBinding.Style.DOCUMENT,&lt;br/&gt;
				use= SOAPBinding.Use.LITERAL	)&lt;br/&gt;
public interface HelloWorld {&lt;br/&gt;
	@WebMethod&lt;br/&gt;
	@WebResult(name=&quot;MyResult&quot;, targetNamespace=&quot;http://nstest.helloworld&quot;)&lt;br/&gt;
    String sayHi(@WebParam(name=&quot;MyInput&quot;, targetNamespace=&quot;http://nstest.helloworld&quot;) String text);&lt;br/&gt;
}&lt;br/&gt;
-----------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
=================HelloWorldImpl.java=======================================&lt;br/&gt;
package demo.spring;&lt;/p&gt;

&lt;p&gt;import javax.jws.WebService;&lt;br/&gt;
import javax.jws.soap.SOAPBinding;&lt;/p&gt;

&lt;p&gt;@WebService(endpointInterface = &quot;demo.spring.HelloWorld&quot;)&lt;br/&gt;
public class HelloWorldImpl implements HelloWorld {&lt;br/&gt;
    public String sayHi(String text) &lt;/p&gt;
{
        return &quot;Hello &quot; + text;
    }
&lt;p&gt;}&lt;br/&gt;
-----------------------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;Create WAR from the above code, deploy to tomcat, here is the WSDL I got from &lt;a href=&quot;http://localhost:8080/...::&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://localhost:8080/...::&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;=======main WSDL: &lt;a href=&quot;http://localhost:8080/spring_http/HelloWorld?wsdl=================&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://localhost:8080/spring_http/HelloWorld?wsdl=================&lt;/a&gt;&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt; &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;wsdl:definitions xmlns:wsdl=&quot;http://schemas.xmlsoap.org/wsdl/&quot; xmlns:ns1=&quot;http://nstest.helloworld&quot; xmlns:soap=&quot;http://schemas.xmlsoap.org/wsdl/soap/&quot; xmlns:tns=&quot;http://spring.demo/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; name=&quot;HelloWorldImplService&quot; targetNamespace=&quot;http://spring.demo/&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;wsdl:import location=&quot;http://localhost:8080/spring_http/HelloWorld?wsdl=MyHelloWorldService.wsdl&quot; namespace=&quot;http://nstest.helloworld&quot; /&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:binding name=&quot;HelloWorldImplServiceSoapBinding&quot; type=&quot;ns1:MyHelloWorldService&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:binding style=&quot;document&quot; transport=&quot;http://schemas.xmlsoap.org/soap/http&quot; /&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:operation name=&quot;sayHi&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:operation soapAction=&quot;&quot; style=&quot;document&quot; /&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:input name=&quot;sayHi&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:body use=&quot;literal&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:input&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:output name=&quot;sayHiResponse&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:body use=&quot;literal&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:output&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:operation&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:binding&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:service name=&quot;HelloWorldImplService&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:port binding=&quot;tns:HelloWorldImplServiceSoapBinding&quot; name=&quot;HelloWorldImplPort&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:address location=&quot;http://localhost:8080/spring_http/HelloWorld&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:port&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:service&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:definitions&amp;gt;&lt;br/&gt;
-----------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
=====imported WSDL: &lt;a href=&quot;http://localhost:8080/spring_http/HelloWorld?wsdl=MyHelloWorldService.wsdl====&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://localhost:8080/spring_http/HelloWorld?wsdl=MyHelloWorldService.wsdl====&lt;/a&gt;&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:definitions xmlns:wsdl=&quot;http://schemas.xmlsoap.org/wsdl/&quot; xmlns:ns1=&quot;http://nstest.helloworld&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; name=&quot;MyHelloWorldService&quot; targetNamespace=&quot;http://nstest.helloworld&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:types&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:schema xmlns=&quot;http://nstest.helloworld&quot; xmlns:tns=&quot;http://spring.demo/&quot; attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;unqualified&quot; targetNamespace=&quot;http://nstest.helloworld&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;import xmlns=&quot;http://www.w3.org/2001/XMLSchema&quot; namespace=&quot;http://spring.demo/&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;xsd:element name=&quot;sayHi&quot; type=&quot;sayHi&quot; /&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:complexType name=&quot;sayHi&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:sequence&amp;gt;&lt;br/&gt;
  &amp;lt;xsd:element minOccurs=&quot;0&quot; name=&quot;MyInput&quot; type=&quot;xsd:string&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/xsd:sequence&amp;gt;&lt;br/&gt;
  &amp;lt;/xsd:complexType&amp;gt;&lt;br/&gt;
  &amp;lt;xsd:element name=&quot;sayHiResponse&quot; type=&quot;sayHiResponse&quot; /&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:complexType name=&quot;sayHiResponse&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:sequence&amp;gt;&lt;br/&gt;
  &amp;lt;xsd:element minOccurs=&quot;0&quot; name=&quot;MyResult&quot; type=&quot;xsd:string&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/xsd:sequence&amp;gt;&lt;br/&gt;
  &amp;lt;/xsd:complexType&amp;gt;&lt;br/&gt;
  &amp;lt;/xsd:schema&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:types&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:message name=&quot;sayHi&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;wsdl:part element=&quot;ns1:sayHi&quot; name=&quot;parameters&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:message&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:message name=&quot;sayHiResponse&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;wsdl:part element=&quot;ns1:sayHiResponse&quot; name=&quot;parameters&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:message&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:portType name=&quot;MyHelloWorldService&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:operation name=&quot;sayHi&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;wsdl:input message=&quot;ns1:sayHi&quot; name=&quot;sayHi&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;wsdl:output message=&quot;ns1:sayHiResponse&quot; name=&quot;sayHiResponse&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:operation&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:portType&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:definitions&amp;gt;&lt;br/&gt;
-------------------------------------------------------------------------------------------------------------------------------------------&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Create client from WSDL by using wsdl2java. The namespaces of input/output parameters have already been missing from the generated service interface:&lt;br/&gt;
================MyHelloWorldService.java (generated by wsdl2java)====================== &lt;br/&gt;
package helloworld.nstest;&lt;/p&gt;

&lt;p&gt;import javax.jws.WebParam.Mode;&lt;br/&gt;
import javax.jws.WebParam;&lt;br/&gt;
import javax.jws.WebService;&lt;br/&gt;
import javax.jws.soap.SOAPBinding.Style;&lt;br/&gt;
import javax.jws.soap.SOAPBinding;&lt;br/&gt;
import javax.jws.WebMethod;&lt;br/&gt;
import javax.jws.WebResult;&lt;br/&gt;
import javax.xml.ws.RequestWrapper;&lt;br/&gt;
import javax.xml.ws.ResponseWrapper;&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This class was generated by Apache CXF (incubator) 2.0.3-incubator&lt;/li&gt;
	&lt;li&gt;Tue Nov 20 22:45:47 EST 2007&lt;/li&gt;
	&lt;li&gt;Generated source version: 2.0.3-incubator&lt;/li&gt;
	&lt;li&gt;&lt;p&gt; */&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@WebService(targetNamespace = &quot;http://nstest.helloworld&quot;, name = &quot;MyHelloWorldService&quot;)&lt;/p&gt;

&lt;p&gt;public interface MyHelloWorldService {&lt;/p&gt;

&lt;p&gt;    @ResponseWrapper(targetNamespace = &quot;http://nstest.helloworld&quot;, className = &quot;helloworld.nstest.SayHiResponse&quot;, localName = &quot;sayHiResponse&quot;)&lt;br/&gt;
    @RequestWrapper(targetNamespace = &quot;http://nstest.helloworld&quot;, className = &quot;helloworld.nstest.SayHi&quot;, localName = &quot;sayHi&quot;)&lt;br/&gt;
    @WebResult(targetNamespace = &quot;&quot;, name = &quot;MyResult&quot;)&lt;br/&gt;
    @WebMethod&lt;br/&gt;
    public java.lang.String sayHi(&lt;br/&gt;
        @WebParam(targetNamespace = &quot;&quot;, name = &quot;MyInput&quot;)&lt;br/&gt;
        java.lang.String myInput&lt;br/&gt;
    );&lt;br/&gt;
}&lt;br/&gt;
===================================================================&lt;/p&gt;

&lt;p&gt;Modify the generated client:&lt;br/&gt;
========MyHelloWorldService_HelloWorldImplPort_Client.java (generated by wsdl2java)======&lt;br/&gt;
package helloworld.nstest;&lt;/p&gt;

&lt;p&gt;import java.io.File;&lt;br/&gt;
import java.net.MalformedURLException;&lt;br/&gt;
import java.net.URL;&lt;br/&gt;
import javax.xml.namespace.QName;&lt;br/&gt;
import demo.spring.HelloWorldImplService;&lt;br/&gt;
import javax.jws.WebMethod;&lt;br/&gt;
import javax.jws.WebResult;&lt;br/&gt;
import javax.xml.ws.RequestWrapper;&lt;br/&gt;
import javax.xml.ws.ResponseWrapper;&lt;/p&gt;

&lt;p&gt;public final class MyHelloWorldService_HelloWorldImplPort_Client {&lt;br/&gt;
    private static final QName SERVICE_NAME = new QName(&quot;http://spring.demo/&quot;, &quot;HelloWorldImplService&quot;);&lt;br/&gt;
    private MyHelloWorldService_HelloWorldImplPort_Client() {&lt;br/&gt;
    }&lt;br/&gt;
    public static void main(String args[]) throws Exception {&lt;/p&gt;

&lt;p&gt;        HelloWorldImplService ss = new HelloWorldImplService();&lt;br/&gt;
        MyHelloWorldService port = ss.getHelloWorldImplPort();     &lt;/p&gt;
        {
        System.out.println(&quot;Invoking sayHi...&quot;);
        java.lang.String _sayHi_myInput = &quot;ABC&quot;;
        java.lang.String _sayHi__return = port.sayHi(_sayHi_myInput);
        System.out.println(&quot;sayHi.result=&quot; + _sayHi__return);
        }
&lt;p&gt;        System.exit(0);&lt;br/&gt;
    }&lt;br/&gt;
}&lt;br/&gt;
--------------------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;SOAP message captured on server-side:&lt;br/&gt;
--------------------------------------&lt;br/&gt;
Encoding: UTF-8&lt;br/&gt;
Headers: &lt;/p&gt;
{connection=[keep-alive], cache-control=[no-cache], host=[localhost:808
0], user-agent=[Java/1.5.0_12], transfer-encoding=[chunked], pragma=[no-cache],
content-type=[text/xml; charset=UTF-8], accept=[*], soapaction=[&quot;&quot;]}
&lt;p&gt;Message:&lt;br/&gt;
&amp;lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;&amp;lt;soap:Body&lt;br/&gt;
&amp;gt;&amp;lt;ns2:sayHi xmlns:ns2=&quot;http://nstest.helloworld&quot;&amp;gt;&amp;lt;MyInput&amp;gt;ABC&amp;lt;/MyInput&amp;gt;&amp;lt;/ns2:say&lt;br/&gt;
Hi&amp;gt;&amp;lt;/soap:Body&amp;gt;&amp;lt;/soap:Envelope&amp;gt;&lt;br/&gt;
--------------------------------------&lt;br/&gt;
Nov 20, 2007 10:51:13 PM org.apache.cxf.interceptor.LoggingOutInterceptor$Loggin&lt;br/&gt;
gCallback onClose&lt;br/&gt;
INFO: Outbound Message:&lt;br/&gt;
--------------------------------------&lt;br/&gt;
&amp;lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;&amp;lt;soap:Body&lt;br/&gt;
&amp;gt;&amp;lt;ns1:sayHiResponse xmlns:ns1=&quot;http://nstest.helloworld&quot;&amp;gt;&amp;lt;MyResult&amp;gt;Hello ABC&amp;lt;/My&lt;br/&gt;
Result&amp;gt;&amp;lt;/ns1:sayHiResponse&amp;gt;&amp;lt;/soap:Body&amp;gt;&amp;lt;/soap:Envelope&amp;gt;-------------------------&lt;br/&gt;
-------------&lt;/p&gt;

&lt;p&gt;You can see that both &quot;MyInput&quot; and &quot;MyResult&quot; have no namespace.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Windows XP; Tomcat 5.5&lt;/p&gt;</environment>
        <key id="12382943">CXF-1226</key>
            <summary>elementFormDefault from package-info.java ignored with JAXWS+JAXB when there are no beans</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="niali">Nianhua Li</reporter>
                        <labels>
                    </labels>
                <created>Wed, 21 Nov 2007 04:27:26 +0000</created>
                <updated>Tue, 29 Jan 2008 21:51:54 +0000</updated>
                            <resolved>Mon, 21 Jan 2008 20:37:29 +0000</resolved>
                                    <version>2.0.2</version>
                    <version>2.0.3</version>
                                    <fixVersion>2.0.4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                                                                <comments>
                            <comment id="12545433" author="bmargulies" created="Mon, 26 Nov 2007 13:04:53 +0000"  >&lt;p&gt;Your implementation class does not include an endpointInterface annotation to point to your SEI, so none of your namespace annotations are being looked at.&lt;/p&gt;</comment>
                            <comment id="12545457" author="nianhua.li@kaplan.com" created="Mon, 26 Nov 2007 14:15:50 +0000"  >&lt;p&gt;Please excuse for my silly question here. Could you be more specific&lt;br/&gt;
about the problem? Are you saying that my implementation class (i.e.&lt;br/&gt;
demo.spring.HelloWorldImpl) doesn&apos;t include an endpointInterface&lt;br/&gt;
annotation to my SEI (i.e. demo.spring.HelloWorld)? In another word,&lt;br/&gt;
this line:&lt;br/&gt;
   @WebService(endpointInterface = &quot;demo.spring.HelloWorld&quot;)&lt;br/&gt;
is incorrect. Could you please kindly give out the correct annotation?&lt;/p&gt;

&lt;p&gt;Many thanks&lt;/p&gt;

&lt;p&gt;nianhua&lt;/p&gt;
</comment>
                            <comment id="12545463" author="nianhua.li@kaplan.com" created="Mon, 26 Nov 2007 14:31:49 +0000"  >&lt;p&gt;Actually I do believe that my namespace annotations in my SEI have been&lt;br/&gt;
looked at. I have only specified namespace &quot;http://nstest.helloworld&quot; in&lt;br/&gt;
my SEI, not anywhere else. The namespace has been included in the WSDL.&lt;br/&gt;
Therefore, either CXF&apos;s java-wsdl mapping or CXF&apos;s java-soap mapping is&lt;br/&gt;
wrong.&lt;/p&gt;

&lt;p&gt;The other problem in this issue is on the client side. Forget about the&lt;br/&gt;
server side; assume we start from the WSDL. The input/output parameters&lt;br/&gt;
have namespace specified in WSDL. The client created from wsdl2java&lt;br/&gt;
should be consistent with the WSDL. Why the namespace get lost from the&lt;br/&gt;
SOAP message?&lt;/p&gt;

&lt;p&gt;So, this issue indicates problems on both server and client side. I&lt;br/&gt;
believe both problems are valid. I don&apos;t understand why you close the&lt;br/&gt;
issue.&lt;/p&gt;</comment>
                            <comment id="12545464" author="bmargulies" created="Mon, 26 Nov 2007 14:35:15 +0000"  >&lt;p&gt;elementFormDefault is unqualified. Should that not suppress the namespace prefixes? Have you tried generating the WSDL just from the SEI, not from the service class? Would you please try adding the endpointInterface annotation?&lt;/p&gt;</comment>
                            <comment id="12545469" author="bmargulies" created="Mon, 26 Nov 2007 15:03:14 +0000"  >&lt;p&gt;Oh dear. I read the generated code instead of your original code.&lt;/p&gt;

&lt;p&gt;I will reopen this. &lt;/p&gt;

&lt;p&gt;I suggest that you try using targetNamespace= to put the SEI and the implementation in the same namespace. I don&apos;t claim that you should have to do this, but it might help while you wait for one of us to turn on our brains.&lt;/p&gt;</comment>
                            <comment id="12545470" author="bmargulies" created="Mon, 26 Nov 2007 15:03:28 +0000"  >&lt;p&gt;I misread the original description.&lt;/p&gt;</comment>
                            <comment id="12545471" author="nianhua.li@kaplan.com" created="Mon, 26 Nov 2007 15:03:52 +0000"  >&lt;p&gt;Thanks for the quick reply. &lt;/p&gt;

&lt;p&gt;About the WSDL: I didn&apos;t generate WSDL from java2wsdl. I deploy the&lt;br/&gt;
service WAR file (say spring_http.war, no WSDL included in it) to&lt;br/&gt;
tomcat, and then I see the WSDL from my web browser, e.g.&lt;br/&gt;
&lt;a href=&quot;http://localhost:8080/spring_http/HelloWorld?wsdl&quot; class=&quot;external-link&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;http://localhost:8080/spring_http/HelloWorld?wsdl&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;About the endpointInterface annotation: I am still confused. The&lt;br/&gt;
implementation class HelloWorldImpl in my issue report contains this&lt;br/&gt;
line:&lt;br/&gt;
 	@WebService(endpointInterface = &quot;demo.spring.HelloWorld&quot;)&lt;br/&gt;
If this is not the correct annotation, could you please give out the&lt;br/&gt;
correct version? &lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;nianhua&lt;/p&gt;
</comment>
                            <comment id="12545494" author="nianhua.li@kaplan.com" created="Mon, 26 Nov 2007 16:26:33 +0000"  >&lt;p&gt;Just FYI, I add targetNamespace= to my implementation class as you suggested, the WSDL looks prettier, but the problems remains.&lt;/p&gt;

&lt;p&gt;=================Implementation Class====================&lt;br/&gt;
package demo.spring;&lt;/p&gt;

&lt;p&gt;import javax.jws.WebService;&lt;br/&gt;
import javax.jws.soap.SOAPBinding;&lt;/p&gt;

&lt;p&gt;@WebService(name=&quot;MyHelloWorldService&quot;, targetNamespace=&quot;http://nstest.helloworld&quot;, &lt;br/&gt;
			endpointInterface = &quot;demo.spring.HelloWorld&quot;)&lt;/p&gt;

&lt;p&gt;public class HelloWorldImpl implements HelloWorld {&lt;/p&gt;

&lt;p&gt;    public String sayHi(String text) &lt;/p&gt;
{
        return &quot;Hello &quot; + text;
    }
&lt;p&gt;}&lt;br/&gt;
======================================================&lt;/p&gt;

&lt;p&gt;============WSDL=====================================&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt; &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;wsdl:definitions xmlns:wsdl=&quot;http://schemas.xmlsoap.org/wsdl/&quot; xmlns:soap=&quot;http://schemas.xmlsoap.org/wsdl/soap/&quot; xmlns:tns=&quot;http://nstest.helloworld&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; name=&quot;HelloWorldImplService&quot; targetNamespace=&quot;http://nstest.helloworld&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:types&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;unqualified&quot; targetNamespace=&quot;http://nstest.helloworld&quot; xmlns:tns=&quot;http://nstest.helloworld&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;xsd:element name=&quot;sayHi&quot; type=&quot;tns:sayHi&quot; /&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:complexType name=&quot;sayHi&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:sequence&amp;gt;&lt;br/&gt;
  &amp;lt;xsd:element minOccurs=&quot;0&quot; name=&quot;MyInput&quot; type=&quot;xsd:string&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/xsd:sequence&amp;gt;&lt;br/&gt;
  &amp;lt;/xsd:complexType&amp;gt;&lt;br/&gt;
  &amp;lt;xsd:element name=&quot;sayHiResponse&quot; type=&quot;tns:sayHiResponse&quot; /&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:complexType name=&quot;sayHiResponse&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;xsd:sequence&amp;gt;&lt;br/&gt;
  &amp;lt;xsd:element minOccurs=&quot;0&quot; name=&quot;MyResult&quot; type=&quot;xsd:string&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/xsd:sequence&amp;gt;&lt;br/&gt;
  &amp;lt;/xsd:complexType&amp;gt;&lt;br/&gt;
  &amp;lt;/xsd:schema&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:types&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:message name=&quot;sayHi&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;wsdl:part element=&quot;tns:sayHi&quot; name=&quot;parameters&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:message&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:message name=&quot;sayHiResponse&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;wsdl:part element=&quot;tns:sayHiResponse&quot; name=&quot;parameters&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:message&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:portType name=&quot;MyHelloWorldService&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:operation name=&quot;sayHi&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;wsdl:input message=&quot;tns:sayHi&quot; name=&quot;sayHi&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;wsdl:output message=&quot;tns:sayHiResponse&quot; name=&quot;sayHiResponse&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:operation&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:portType&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:binding name=&quot;HelloWorldImplServiceSoapBinding&quot; type=&quot;tns:MyHelloWorldService&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:binding style=&quot;document&quot; transport=&quot;http://schemas.xmlsoap.org/soap/http&quot; /&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:operation name=&quot;sayHi&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:operation soapAction=&quot;&quot; style=&quot;document&quot; /&amp;gt; &lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:input name=&quot;sayHi&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:body use=&quot;literal&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:input&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:output name=&quot;sayHiResponse&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:body use=&quot;literal&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:output&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:operation&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:binding&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:service name=&quot;HelloWorldImplService&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;wsdl:port binding=&quot;tns:HelloWorldImplServiceSoapBinding&quot; name=&quot;MyHelloWorldServicePort&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;soap:address location=&quot;http://localhost:8080/spring_http/HelloWorld&quot; /&amp;gt; &lt;br/&gt;
  &amp;lt;/wsdl:port&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:service&amp;gt;&lt;br/&gt;
  &amp;lt;/wsdl:definitions&amp;gt;&lt;br/&gt;
===========================================================&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12545502" author="bmargulies" created="Mon, 26 Nov 2007 16:56:01 +0000"  >&lt;p&gt;The problem here is that elementFormDefault is generated by JAXB+JAXWS as unqualified.&lt;/p&gt;

&lt;p&gt;Since you have no bean types, JAXB is not involved, and JAXWS doesn&apos;t seem to be respecting package-info.java annotations. That might be a bug. If you add a package-info.java like:&lt;/p&gt;

&lt;p&gt;@javax.xml.bind.annotation.XmlSchema(namespace = &quot;http://nstest.helloworld&quot;, &lt;br/&gt;
                                     elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)&lt;/p&gt;


&lt;p&gt;and you have any jaxb-processed types involved, things might get better.&lt;/p&gt;</comment>
                            <comment id="12545505" author="bmargulies" created="Mon, 26 Nov 2007 17:00:56 +0000"  >&lt;p&gt;I&apos;ve checked in a test case for this in systests as org.apache.cxf.cxf1226. If JAXWS should respect package-info.java for the target namespace of an SEI, then this is a bug. If not, the submitted needs more advice from us.&lt;/p&gt;
</comment>
                            <comment id="12545511" author="bmargulies" created="Mon, 26 Nov 2007 17:06:34 +0000"  >&lt;p&gt;OK. I don&apos;t know if this is a bug or a feature, but ...&lt;/p&gt;

&lt;p&gt;Since you are only dealing with basic types plus the SEI and implementation, JAXB isn&apos;t involved. You can get JAXB involved via two steps:&lt;/p&gt;

&lt;p&gt;1) Add a package-info.java specifying elementFormDefault=&apos;qualified&apos; for the namespace that you are using for these elements.&lt;/p&gt;

&lt;p&gt;2) Add a method to your service that uses an object defined in the package where you put the package-info.java.&lt;/p&gt;

&lt;p&gt;I haven&apos;t tested that the XML on the wire is as you want, but i have tested that elementForDefault gets sets to qualified.&lt;/p&gt;

&lt;p&gt;I&apos;m leaving this open until someone tells me if this is a bug or not that the package-info.java is ignored without the bean.&lt;/p&gt;</comment>
                            <comment id="12545698" author="nianhua.li@kaplan.com" created="Tue, 27 Nov 2007 03:44:16 +0000"  >&lt;p&gt;Thanks Benson. You are right that the attribute elementFormDefault  in WSDL is related to java-soap mapping. In another world, the input/output parameters won&apos;t have namespaces when elementFormDefault=unqualified. &lt;/p&gt;

&lt;p&gt;In the project I am working on, the data types (e.g. TransactionTypeFull in the example below) of input/output parameters are defined in an xml schema. The input/output parameters are defined in SEI. They have different namespaces:&lt;/p&gt;

&lt;p&gt;@WebMethod&lt;br/&gt;
@WebResult(name=&quot;MyResult&quot;, targetNamespace=&quot;http://nstest.transaction&quot;)&lt;br/&gt;
    TransactionTypeFull submit(@WebParam(name=&quot;Transaction&quot;, targetNamespace=&quot;http://nstest.bean&quot;) TransactionTypeFull body);&lt;/p&gt;

&lt;p&gt;I mapped the namespace &quot;http://nstest.bean&quot; to one java package, and mapped the SEI and implementor to the other java package. Therefore it is basically the same as if I only use simple xsd types. In another word, JAXB is not involved in the processing of SEI annotation.&lt;/p&gt;

&lt;p&gt;I was using xfire 1.2.6 for this project, and had never had this problem. Now I want to migrate to cxf to take advantage of its RESTful support ... For this namespace issue, I probably have to define some dummy data types for namespace &quot;http://nstest.transaction&quot; so that JAXB can get involved. Thanks again for the help. At least I have a work around now, even though it is not pretty.&lt;/p&gt;</comment>
                            <comment id="12547238" author="dkulp" created="Fri, 30 Nov 2007 18:31:02 +0000"  >
&lt;p&gt;This is definitely a JAX-WS spec/TCK issue.   The TCK basically requires us to make the schemas for the wrapper type unqualified.   We originaly had them qualified (to match xfire), but could not get the tck to pass.   &lt;/p&gt;

&lt;p&gt;That said, with 2.0.3, there is a way to configure things in Spring config to make the schemas qualified.  It&apos;s not very well tested though.   The ReflectionServiceFactoryBean has a qualifiedSchemas attribute that can be set to true to have it generate the schemas as qualified.   Should look something like:&lt;/p&gt;


&lt;p&gt;  &amp;lt;jaxws:server address=&quot;/jaxwsAndJaxb&quot; &lt;br/&gt;
    serviceClass=&quot;org.apache.cxf.authservice.AuthService&quot;&amp;gt; &lt;br/&gt;
    &amp;lt;jaxws:serviceBean&amp;gt; &lt;br/&gt;
      &amp;lt;bean class=&quot;org.apache.cxf.authservice.AuthServiceImpl&quot; /&amp;gt; &lt;br/&gt;
    &amp;lt;/jaxws:serviceBean&amp;gt; &lt;br/&gt;
    &amp;lt;jaxws:serviceFactory&amp;gt; &lt;br/&gt;
            &amp;lt;bean class=&quot;org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean&quot;&amp;gt; &lt;br/&gt;
            &amp;lt;property name=&quot;qualifyWrapperSchema&quot; value=&quot;true&quot;/&amp;gt; &lt;br/&gt;
            &amp;lt;/bean&amp;gt; &lt;br/&gt;
    &amp;lt;/jaxws:serviceFactory&amp;gt; &lt;br/&gt;
   &amp;lt;/jaxws:server&amp;gt; &lt;/p&gt;</comment>
                            <comment id="12547248" author="bmargulies" created="Fri, 30 Nov 2007 19:12:34 +0000"  >&lt;p&gt;Dan,&lt;/p&gt;

&lt;p&gt;I thought that you told me that automatically generating wrappers was a CXF extension over and above JAX-WS. So, in that case, how can it be a TCK violation to respect a JAXB package-info.java?&lt;/p&gt;</comment>
                            <comment id="12552001" author="bmargulies" created="Sat, 15 Dec 2007 01:02:11 +0000"  >&lt;p&gt;Dan, if this is legit, please send it back to me. If this is just how life is with these dueling standards, let&apos;s close this out (and encourage the use of doc/bare?).&lt;/p&gt;</comment>
                            <comment id="12561117" author="dkulp" created="Mon, 21 Jan 2008 20:28:10 +0000"  >&lt;p&gt;Tested a fix to honor the jAXB annotations in the package-info.java with the TCK and everything passes ok.   Thus, I&apos;ll get the fix committed in fro 2.0.4.&lt;/p&gt;

&lt;p&gt;Dan&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12310060" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Complexity</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10060"><![CDATA[Unknown]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>112047</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            15 years, 20 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i13zkn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>231393</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>