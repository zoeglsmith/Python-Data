<!-- 
RSS generated by JIRA (8.20.10#820010-sha1:ace47f9899e9ee25d7157d59aa17ab06aee30d3d) at Sat May 27 09:43:22 UTC 2023

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>8.20.10</version>
        <build-number>820010</build-number>
        <build-date>22-06-2022</build-date>
    </build-info>


<item>
            <title>[CXF-5366] Authorization header is not set correctly in CXF HTTP digest authentication </title>
                <link>https://issues.apache.org/jira/browse/CXF-5366</link>
                <project id="12310511" key="CXF">CXF</project>
                    <description>&lt;p&gt;When performing the digest HTTP authentication the generated Authorization header is missing the &quot;algorithm&quot; element. Also if the algorithm is &quot;MD5-sess&quot; it should appear in the Authorization header as is and not as &quot;MD5&quot;. To get around the issue it is possible to use a customized DigestAuthSupplier for the affected CXF versions. The result of WS invocation without &quot;algorithm&quot; in the Authorization header is 400-Bad request.&lt;br/&gt;
The issue relates to versions of CXF 2.7.4 and later, earlier versions work fine.&lt;/p&gt;

&lt;p&gt;Sample request:&lt;/p&gt;

&lt;p&gt;POST /XXXXXXX HTTP/1.1&lt;br/&gt;
Content-Type: text/xml; charset=UTF-8&lt;br/&gt;
Accept: &lt;b&gt;/&lt;/b&gt;&lt;br/&gt;
SOAPAction: &quot;http://schemas.microsoft.com/dynamics/XXXXXXX&quot;&lt;br/&gt;
User-Agent: Apache CXF 2.7.4&lt;br/&gt;
Cache-Control: no-cache&lt;br/&gt;
Pragma: no-cache&lt;br/&gt;
Host: XXXXX&lt;br/&gt;
Connection: keep-alive&lt;br/&gt;
Content-Length: 542&lt;/p&gt;

&lt;p&gt;&amp;lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;&amp;lt;soap:Body&amp;gt;XXXXX&amp;lt;/soap:Body&amp;gt;&amp;lt;/soap:Envelope&amp;gt;&lt;br/&gt;
POST /XXXXX HTTP/1.1&lt;br/&gt;
Content-Type: text/xml; charset=UTF-8&lt;br/&gt;
Accept: &lt;b&gt;/&lt;/b&gt;&lt;br/&gt;
Authorization: Digest response=&quot;541f8d073f2be81deae8e2f1065725b2&quot;, cnonce=&quot;46f26ffb6cf32b66873bf6e5e955bae8&quot;, username=&quot;XXXXX&quot;, nc=&quot;00000001&quot;, nonce=&quot;+Upgraded+v126a0f6047dd70851ab2155a14d09d56aacd7cd4a87d1ce01d77d4709393a1585490f57bdd6026b2c339c1f27bc03f4e47400ad20e8208244&quot;, realm=&quot;Digest&quot;, qop=&quot;auth&quot;, uri=&quot;/XXXXXXX&quot;&lt;br/&gt;
SOAPAction: &quot;http://schemas.microsoft.com/dynamics/XXXXXXX&quot;&lt;br/&gt;
User-Agent: Apache CXF 2.7.4&lt;br/&gt;
Cache-Control: no-cache&lt;br/&gt;
Pragma: no-cache&lt;br/&gt;
Host: localhost:8887&lt;br/&gt;
Connection: keep-alive&lt;br/&gt;
Content-Length: 542&lt;/p&gt;

&lt;p&gt;&amp;lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;&amp;lt;soap:Body&amp;gt;XXXXXX&amp;lt;/soap:Body&amp;gt;&amp;lt;/soap:Envelope&amp;gt;&lt;/p&gt;

&lt;p&gt;Sample response:&lt;/p&gt;

&lt;p&gt;HTTP/1.1 401 Unauthorized&lt;br/&gt;
Content-Length: 0&lt;br/&gt;
Server: Microsoft-HTTPAPI/2.0&lt;br/&gt;
WWW-Authenticate: Digest qop=&quot;auth&quot;,algorithm=MD5-sess,nonce=&quot;+Upgraded+v126a0f6047dd70851ab2155a14d09d56af26b5ad2f0d3ce0169267269a2cfa168709705665fd13f9adf81235595c672ec1623b17e470ccaef&quot;,charset=utf-8,realm=&quot;Digest&quot;&lt;br/&gt;
Date: Mon, 28 Oct 2013 15:17:31 GMT&lt;/p&gt;

&lt;p&gt;HTTP/1.1 400 Bad Request&lt;br/&gt;
Content-Length: 0&lt;br/&gt;
Server: Microsoft-HTTPAPI/2.0&lt;br/&gt;
Date: Mon, 28 Oct 2013 15:17:31 GMT&lt;/p&gt;
</description>
                <environment>&lt;p&gt;Windows 7 64 bit, Java 1.6.0_29, CXF 2.7.4, calling MS Dynamics WS.&lt;/p&gt;</environment>
        <key id="12676335">CXF-5366</key>
            <summary>Authorization header is not set correctly in CXF HTTP digest authentication </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="chakine">Evgeny Shakin</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Oct 2013 14:12:45 +0000</created>
                <updated>Tue, 26 Nov 2013 17:40:16 +0000</updated>
                            <resolved>Tue, 19 Nov 2013 17:03:05 +0000</resolved>
                                    <version>2.7.4</version>
                    <version>2.7.5</version>
                    <version>2.7.6</version>
                    <version>2.7.7</version>
                                    <fixVersion>2.7.8</fixVersion>
                    <fixVersion>2.6.11</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                                                                <comments>
                            <comment id="13808390" author="dkulp" created="Tue, 29 Oct 2013 20:14:17 +0000"  >&lt;p&gt;Do you have a patch for this?   Or at least a copy of your customized DigestAuthSupplier?  That would be  big help.&lt;/p&gt;
</comment>
                            <comment id="13808893" author="chakine" created="Wed, 30 Oct 2013 09:37:51 +0000"  >&lt;p&gt;Sure, here is the code of my customized DigestAuthSupplier, the changes vis-a-vis the original DigestAuthSupplier are hardly noticeable, please watch for //ES: comments. This auth supplier is set on the HTTPConduit as follows: conduit.setAuthSupplier(new CustomAuthSupplier());&lt;/p&gt;

&lt;p&gt;public class CustomAuthSupplier implements HttpAuthSupplier {&lt;br/&gt;
	 private static final char[] HEXADECIMAL = &lt;/p&gt;
{
	        &apos;0&apos;, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;, &apos;5&apos;, &apos;6&apos;, &apos;7&apos;, &apos;8&apos;, &apos;9&apos;, &apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos;
	    }
&lt;p&gt;;&lt;/p&gt;

&lt;p&gt;	    final MessageDigest md5Helper;&lt;br/&gt;
	    Map&amp;lt;URI, DigestInfo&amp;gt; authInfo = new ConcurrentHashMap&amp;lt;URI, DigestInfo&amp;gt;(); &lt;/p&gt;

&lt;p&gt;	    public CustomAuthSupplier() {&lt;br/&gt;
	        MessageDigest md = null;&lt;br/&gt;
	        try &lt;/p&gt;
{
	            md = MessageDigest.getInstance(&quot;MD5&quot;);
	        }
&lt;p&gt; catch (NoSuchAlgorithmException e) &lt;/p&gt;
{
	            //ignore - set to null
	        }
&lt;p&gt;	        md5Helper = md;&lt;br/&gt;
	    }&lt;/p&gt;

&lt;p&gt;	    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;{@inheritDoc}&lt;/li&gt;
	&lt;li&gt;With digest, the nonce could expire and thus a rechallenge will be issued.&lt;/li&gt;
	&lt;li&gt;Thus, we need requests cached to be able to handle that&lt;br/&gt;
	     */&lt;br/&gt;
	    public boolean requiresRequestCaching() 
{
	        return true;
	    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;	    public String getAuthorization(AuthorizationPolicy authPolicy,&lt;br/&gt;
	                                   URI currentURI,&lt;br/&gt;
	                                   Message message,&lt;br/&gt;
	                                   String fullHeader) {&lt;br/&gt;
	        if (authPolicy == null || (authPolicy.getUserName() == null &amp;amp;&amp;amp; authPolicy.getPassword() == null)) &lt;/p&gt;
{
	            return null;
	        }

&lt;p&gt;	        if (fullHeader == null) {&lt;br/&gt;
	            DigestInfo di = authInfo.get(currentURI);&lt;br/&gt;
	            if (di != null) &lt;/p&gt;
{
	                /* Preemptive authentication is only possible if we have a cached
	                 * challenge
	                 */
	                return di.generateAuth(currentURI.getPath(), 
	                                       authPolicy.getUserName(),
	                                       authPolicy.getPassword());            
	            }
&lt;p&gt; else &lt;/p&gt;
{
	                return null;
	            }
&lt;p&gt;	        }&lt;br/&gt;
	        HttpAuthHeader authHeader = new HttpAuthHeader(fullHeader);&lt;br/&gt;
	        if (authHeader.authTypeIsDigest()) {&lt;br/&gt;
	            Map&amp;lt;String, String&amp;gt; map = authHeader.getParams();&lt;br/&gt;
	            if (&quot;auth&quot;.equals(map.get(&quot;qop&quot;))&lt;br/&gt;
	                &amp;#124;| !map.containsKey(&quot;qop&quot;)) {&lt;br/&gt;
	                DigestInfo di = new DigestInfo();&lt;br/&gt;
	                di.qop = map.get(&quot;qop&quot;);&lt;br/&gt;
	                di.realm = map.get(&quot;realm&quot;);&lt;br/&gt;
	                di.nonce = map.get(&quot;nonce&quot;);&lt;br/&gt;
	                di.opaque = map.get(&quot;opaque&quot;);&lt;br/&gt;
	                if (map.containsKey(&quot;algorithm&quot;)) &lt;/p&gt;
{
	                    di.algorithm = map.get(&quot;algorithm&quot;);
	                }
&lt;p&gt;	                if (map.containsKey(&quot;charset&quot;)) &lt;/p&gt;
{
	                    di.charset = map.get(&quot;charset&quot;);
	                }
&lt;p&gt;	                di.method = (String)message.get(Message.HTTP_REQUEST_METHOD);&lt;br/&gt;
	                if (di.method == null) &lt;/p&gt;
{
	                    di.method = &quot;POST&quot;;
	                }
&lt;p&gt;	                authInfo.put(currentURI, di);&lt;/p&gt;

&lt;p&gt;	                return di.generateAuth(currentURI.getPath(), &lt;br/&gt;
	                                       authPolicy.getUserName(),&lt;br/&gt;
	                                       authPolicy.getPassword());&lt;br/&gt;
	            }&lt;/p&gt;

&lt;p&gt;	        }&lt;br/&gt;
	        return null;&lt;br/&gt;
	    }&lt;/p&gt;

&lt;p&gt;	    public String createCnonce() throws UnsupportedEncodingException {&lt;br/&gt;
	        String cnonce = Long.toString(System.currentTimeMillis());&lt;br/&gt;
	        byte[] bytes = cnonce.getBytes(&quot;US-ASCII&quot;);&lt;br/&gt;
	        synchronized (md5Helper) &lt;/p&gt;
{
	            bytes = md5Helper.digest(bytes);
	        }
&lt;p&gt;	        return encode(bytes);&lt;br/&gt;
	    }&lt;/p&gt;

&lt;p&gt;	    class DigestInfo {&lt;br/&gt;
	        String qop;&lt;br/&gt;
	        String realm;&lt;br/&gt;
	        String nonce;&lt;br/&gt;
	        String opaque;&lt;br/&gt;
	        int nc;&lt;br/&gt;
	        String algorithm = &quot;MD5&quot;;&lt;br/&gt;
	        String charset = &quot;ISO-8859-1&quot;;&lt;br/&gt;
	        String method = &quot;POST&quot;;&lt;/p&gt;

&lt;p&gt;	        synchronized String generateAuth(String uri, String username, String password) {&lt;br/&gt;
	            try {&lt;br/&gt;
	                nc++;&lt;br/&gt;
	                String ncstring = String.format(&quot;%08d&quot;, nc);&lt;br/&gt;
	                String cnonce = createCnonce();&lt;/p&gt;

&lt;p&gt;	                String digAlg = algorithm;&lt;br/&gt;
	                if (digAlg.equalsIgnoreCase(&quot;MD5-sess&quot;)) &lt;/p&gt;
{
	                    digAlg = &quot;MD5&quot;;
	                }
&lt;p&gt;	                MessageDigest digester = MessageDigest.getInstance(digAlg);&lt;br/&gt;
	                String a1 = username + &quot;:&quot; + realm + &quot;:&quot; + password;&lt;br/&gt;
	                if (&quot;MD5-sess&quot;.equalsIgnoreCase(algorithm)) &lt;/p&gt;
{
			// ES:removed
			//  algorithm = &quot;MD5&quot;;
			
	                    String tmp2 = encode(digester.digest(a1.getBytes(charset)));
	                    a1 = tmp2 + &apos;:&apos; + nonce + &apos;:&apos; + cnonce;
	                }
&lt;p&gt;	                String hasha1 = encode(digester.digest(a1.getBytes(charset)));&lt;br/&gt;
	                String a2 = method + &quot;:&quot; + uri;&lt;br/&gt;
	                String hasha2 = encode(digester.digest(a2.getBytes(&quot;US-ASCII&quot;)));&lt;br/&gt;
	                String serverDigestValue = null;&lt;br/&gt;
	                if (qop == null) &lt;/p&gt;
{
	                    serverDigestValue = hasha1 + &quot;:&quot; + nonce + &quot;:&quot; + hasha2;
	                }
&lt;p&gt; else &lt;/p&gt;
{
	                    serverDigestValue = hasha1 + &quot;:&quot; + nonce + &quot;:&quot; + ncstring + &quot;:&quot; + cnonce + &quot;:&quot; 
	                        + qop + &quot;:&quot; + hasha2;
	                }
&lt;p&gt;	                String response = encode(digester.digest(serverDigestValue.getBytes(&quot;US-ASCII&quot;)));&lt;br/&gt;
	                Map&amp;lt;String, String&amp;gt; outParams = new HashMap&amp;lt;String, String&amp;gt;();&lt;br/&gt;
	                outParams.put(&quot;username&quot;, username);&lt;br/&gt;
	                outParams.put(&quot;realm&quot;, realm);&lt;br/&gt;
	                outParams.put(&quot;nonce&quot;, nonce);&lt;br/&gt;
	                outParams.put(&quot;nc&quot;, ncstring);&lt;br/&gt;
	                outParams.put(&quot;uri&quot;, uri);&lt;br/&gt;
	                outParams.put(&quot;response&quot;, response);&lt;br/&gt;
			//ES: added&lt;br/&gt;
		        outParams.put(&quot;algorithm&quot;, algorithm);&lt;br/&gt;
	                outParams.put(&quot;cnonce&quot;, cnonce);&lt;br/&gt;
	                if (qop != null) &lt;/p&gt;
{
	                    outParams.put(&quot;qop&quot;, &quot;auth&quot;);
	                }

&lt;p&gt;	                outParams.put(&quot;opaque&quot;, opaque);&lt;/p&gt;






&lt;p&gt;	                return new HttpAuthHeader(HttpAuthHeader.AUTH_TYPE_DIGEST, outParams).getFullHeader();&lt;br/&gt;
	            } catch (Exception ex) &lt;/p&gt;
{
	                throw new RuntimeException(ex);
	            }
&lt;p&gt;	        }&lt;/p&gt;


&lt;p&gt;	    }&lt;/p&gt;

&lt;p&gt;	    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Encodes the 128 bit (16 bytes) MD5 digest into a 32 characters long&lt;/li&gt;
	&lt;li&gt;&amp;lt;CODE&amp;gt;String&amp;lt;/CODE&amp;gt; according to RFC 2617.&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;@param binaryData array containing the digest&lt;/li&gt;
	&lt;li&gt;@return encoded MD5, or &amp;lt;CODE&amp;gt;null&amp;lt;/CODE&amp;gt; if encoding failed&lt;br/&gt;
	     */&lt;br/&gt;
	    private static String encode(byte[] binaryData) {&lt;br/&gt;
	        int n = binaryData.length; &lt;br/&gt;
	        char[] buffer = new char&lt;span class=&quot;error&quot;&gt;&amp;#91;n * 2&amp;#93;&lt;/span&gt;;&lt;br/&gt;
	        for (int i = 0; i &amp;lt; n; i++) 
{
	            int low = binaryData[i] &amp;amp; 0x0f;
	            int high = (binaryData[i] &amp;amp; 0xf0) &amp;gt;&amp;gt; 4;
	            buffer[i * 2] = HEXADECIMAL[high];
	            buffer[(i * 2) + 1] = HEXADECIMAL[low];
	        }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;	        return new String(buffer);&lt;br/&gt;
	    }&lt;br/&gt;
}&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12314020" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>355832</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 31 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1pce7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>356120</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfields>
    </item>
</channel>
</rss>